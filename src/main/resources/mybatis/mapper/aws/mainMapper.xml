<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoulauction.renewal.mapper.aws.MainMapper">

    <select id="selectTopNotice" parameterType="CommonMap" resultType="CommonMap">
    <![CDATA[
        select *
        from main_banner
        where banner_type = 'top-text'
            and is_open = 'Y'
            and status = 'A'
            and start_at + interval 9 hour <=  (now() + interval 9 hour)
            and end_at + interval 1 day + interval 9 hour >= (now() + interval 9 hour)
            order by start_at desc, id desc
       limit 3;
    ]]>
    </select>

    <select id="selectBeltBanners" parameterType="CommonMap" resultType="CommonMap">
    <![CDATA[
        select mb.*
        from main_banner mb
        where mb.banner_type = 'middle-rolling'
            and mb.status = 'A'
            and mb.start_at + interval 9 hour <= now() + interval 9 hour
            and mb.end_at + interval 1 day + interval 9 hour >= now() + interval 9 hour
        order by mb.sort desc;
    ]]>
    </select>
    <!--Newsletter-->
    <select id="selectNewsletters" parameterType="CommonMap" resultType="CommonMap">
        SELECT id, title, content, publish_at, status, created_at, updated_at
            , CASE when created_at >= DATE_ADD(NOW(), INTERVAL -7 DAY) then 'Y' else 'N' end as is_new
        FROM content_newsletter
        WHERE status = 'A'
        ORDER BY publish_at desc, created_at desc
    </select>

    <select id="selectNewsletterById" parameterType="CommonMap" resultType="CommonMap">
        SELECT id, title, content, publish_at, status, created_at, updated_at
            , CASE when created_at >= DATE_ADD(NOW(), INTERVAL -7 DAY) then 'Y' else 'N' end as is_new
        FROM content_newsletter
        WHERE status = 'A'
            and id = #{id}
    </select>
    <insert id="insertNewsletter" parameterType="CommonMap"
            useGeneratedKeys="true"
            keyProperty="newsletter_id" keyColumn="id">
        INSERT INTO newsletter_subscriber
            ( name , email , lang , is_subscribe )
        VALUES
            ( #{name} , #{email} , #{lang} , 'Y' )
    </insert>
    <insert id="insertNewsletterHistory" parameterType="CommonMap">
        INSERT INTO newsletter_subscribe_history
            ( newsletter_subscriber_id , is_subscribe )
        VALUES
            ( #{newsletter_id} , 'Y' )
    </insert>

    <select id="selectNewsletterForOverlapCheck" parameterType="CommonMap" resultType="CommonMap">
        SELECT
            *
        FROM
            newsletter_subscriber
        where
            name  = #{name}
            and email = #{email}
        limit
            1
    </select>

    <select id="selectVideos" parameterType="CommonMap" resultType="CommonMap">
        SELECT id, media_type, content_type, title, read_count, content, sort, status, created_at, updated_at, url
        FROM content_media cm
        WHERE status = 'A'
          and is_open = 'Y'
            AND media_type = #{media_type}
        ORDER BY sort
        LIMIT #{size}
    </select>
    <!--Popup-->
    <select id="selectPopup" parameterType="CommonMap" resultType="CommonMap">
        <![CDATA[
            SELECT
                *
            FROM
                main_popup
            WHERE
                status = 'A'
                and start_at + interval 9 hour <= (now() + interval 9 hour)
                and end_at + interval 9 hour >= (now() + interval 9 hour)
            ORDER BY
                start_at DESC
            LIMIT
                1
        ]]>
    </select>

    <select id="selectBigBanners" resultType="CommonMap">
        <![CDATA[
        select * from main_banner
        where banner_type = 'main-rolling'
        and status = 'A'
        and start_at + interval 9 hour <= (now() + interval 9 hour) and end_at + interval 9 hour >= (now() + interval 9 hour)
        order by sort;
        ]]>
    </select>

    <select id="selectBrochures" parameterType="CommonMap" resultType="CommonMap">
        SELECT id, content_type, sale_no, start_at, end_at, read_count, content, sort, file_status, created_at, updated_at
        FROM content_brochure cb
        WHERE status = 'A'
            AND file_status = 'before'
            AND (now() + interval 9 hour) between start_at and end_at
            AND sale_no = #{sale_no}
        ORDER BY sort
    </select>

    <update id="addBrochureReadCount" parameterType="CommonMap">
        UPDATE content_brochure
        SET read_count = read_count + 1
        WHERE id = #{id}
    </update>

    <update id="addReadCount" parameterType="CommonMap">
        UPDATE ${table_name}
        SET read_count = read_count + 1
        WHERE id = #{id}
    </update>
</mapper>