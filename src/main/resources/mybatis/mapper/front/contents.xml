<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.front.contents">

	
	<select id="get_recruit_list" resultType="Map">
		<include refid="get_recruit_sql"/>
		  limit	#{from}, #{rows}
	</select>
	
	<select id="get_recruit_count" resultType="Map">
		select  count(A.recruitment_no) as CNT
		from 	(
		<include refid="get_recruit_sql" />
		) A
	</select>
	
	<sql id="get_recruit_sql">
		select *
	   from RECRUITMENT
	   where 1=1 and del_yn = 'N' and www_disp_yn = 'Y'
	   <if test="recruitment_title != null">
		 and recruitment_title like concat('%', #{recruitment_title}, '%') 
		</if>
		<if test="recruitment_all != null">
		 and (recruitment_title like concat('%', #{recruitment_title}, '%') or recruitment_memo like concat('%', #{recruitment_memo}, '%'))
		</if>
	</sql>
	
	<select id="get_recruit_detail" resultType="Map">
		select 
		recruitment_no,
		recruitment_title,
		recruitment_from_dt,
		recruitment_to_dt,
		recruitment_dt_none,
		recruitment_memo,
		COLUMN_JSON(recruitment_memo_blob) MEMO_JSON ,
		recruitment_form_file_path,
		recruitment_form_file_name,
		recruitment_form_file_name_org,
		recruitment_img_file_path,
		recruitment_img_file_name,
		recruitment_img_file_name_org,
		del_yn,
		www_disp_yn,
		reg_dt,
		reg_emp_no,
		mod_dt,
		mod_emp_no
		from RECRUITMENT
		where recruitment_no = #{recruitment_no}
	</select>
	


	<select id="get_academy_now_count" resultType="Map">
		select  count(A.ACADEMY_NO) as CNT
				,SUM(IF(A.ACADEMY_CD = 'CULTURE' AND A.END_YN='N', 1, 0)) CULTURE_NEW,
				SUM(IF(A.ACADEMY_CD = 'ARTAUCTION' AND A.END_YN='N', 1, 0)) ARTAUCTION_NEW,
				SUM(IF(A.ACADEMY_CD = 'LECTURE' AND A.END_YN='N', 1, 0)) LECTURE_NEW,
				SUM(IF(A.ACADEMY_CD = 'ARTBRUNCH' AND A.END_YN='N', 1, 0)) ARTBRUNCH_NEW,
				SUM(IF(A.ACADEMY_CD = 'ARTCULTURE' AND A.END_YN='N', 1, 0)) ARTCULTURE_NEW,
				SUM(IF(A.ACADEMY_CD = 'ARTBUSAN' AND A.END_YN='N', 1, 0)) ARTBUSAN_NEW,
				SUM(IF(A.ACADEMY_CD = 'ARTISTTALK' AND A.END_YN='N', 1, 0)) ARTISTTALK_NEW
	    	 from 	(
	    	 <include refid="get_academy_now_sql"/>
	    	 ) A
	</select>
	
	<select id="get_academy_now_list" resultType="Map">
		<include refid="get_academy_now_sql"/>
		    limit		#{from}, #{rows}
	</select>
	
	<sql id="get_academy_now_sql">
		select A.ACADEMY_NO AS ACADEMY_NO, 
			   A.ACADEMY_CD AS ACADEMY_CD,
			   COLUMN_JSON(A.TITLE_BLOB) TITLE_JSON ,
			   COLUMN_JSON(A.CONTENTS_BLOB) CONTENTS_JSON ,	
		       A.FROM_DT AS FROM_DT, 
		       A.TO_DT AS TO_DT, 
		       A.ACADEMY_TIME AS ACADEMY_TIME,
		       A.ACADEMY_TIME_EN AS ACADEMY_TIME_EN,
		       A.IMG_PATH AS IMG_PATH, 
		       A.IMG_PATH_EN AS IMG_PATH_EN, 
		       A.IMG_VIEW_PATH AS IMG_VIEW_PATH,
		       A.IMG_VIEW_PATH_EN AS IMG_VIEW_PATH_EN,
		       A.FILE_NAME AS FILE_NAME,
		       A.FILE_NAME_EN AS FILE_NAME_EN,
		       A.FILE_ORG_NAME AS FILE_ORG_NAME,
		       A.FILE_ORG_NAME_EN AS FILE_ORG_NAME_EN,
		       A.FILE_PATH AS FILE_PATH, 
		       A.FILE_PATH_EN AS FILE_PATH_EN,
		       A.REG_DT AS  REG_DT, 
		       A.REG_EMP_NO AS REG_EMP_NO, 
		       B.EMP_NAME AS REG_EMP_NAME,
		       A.VIEW_FILE_NAME AS VIEW_FILE_NAME,
		       A.VIEW_FILE_NAME_EN AS VIEW_FILE_NAME_EN,
		       A.VIEW_FILE_ORG_NAME AS VIEW_FILE_ORG_NAME,
		       A.VIEW_FILE_ORG_NAME_EN AS VIEW_FILE_ORG_NAME_EN,
		       A.ACADEMY_PAY AS ACADEMY_PAY,		       
		       (case when #{action_user_no} = null then 0 else (SELECT COUNT(*) FROM ACADEMY_PAY C WHERE A.ACADEMY_NO = C.ACADEMY_NO AND C.CUST_NO = #{action_user_no} ) end )  AS ACADEMY_COMPLETE,
		       IF(CAST(DATE_FORMAT(NOW(), "%Y-%m-%d") AS CHAR) > A.TO_DT, 'Y', 'N') END_YN,
		       date_format(NOW(), '%Y-%m-%d') as DB_NOW
		   from ACADEMY A INNER JOIN EMP B ON A.REG_EMP_NO = B.EMP_NO
		     where A.DISP_YN = 'Y' AND A.DEL_YN = 'N'
		order by A.FROM_DT DESC 
	</sql>

	<select id="get_academy_cnt" resultType="Map">
		select count(*) as CNT   
		   from ACADEMY A INNER JOIN EMP B ON A.REG_EMP_NO = B.EMP_NO
		      where A.ACADEMY_CD = #{academy_cd} 
		      and A.DISP_YN = 'Y' AND A.DEL_YN = 'N'
		order by A.REG_DT DESC
	</select>
	<select id="get_academy_info" resultType="Map">
		select A.ACADEMY_NO AS ACADEMY_NO, 
			   A.ACADEMY_CD AS ACADEMY_CD,
			   COLUMN_JSON(A.TITLE_BLOB) TITLE_JSON ,
			   COLUMN_JSON(A.CONTENTS_BLOB) CONTENTS_JSON ,	
		       A.FROM_DT AS FROM_DT, 
		       A.TO_DT AS TO_DT, 
		       A.ACADEMY_TIME AS ACADEMY_TIME,
		       A.ACADEMY_TIME_EN AS ACADEMY_TIME_EN,
		       A.IMG_PATH AS IMG_PATH, 
		       A.IMG_PATH_EN AS IMG_PATH_EN, 
		       A.IMG_VIEW_PATH AS IMG_VIEW_PATH,
		       A.IMG_VIEW_PATH_EN AS IMG_VIEW_PATH_EN,
		       A.FILE_NAME AS FILE_NAME,
		       A.FILE_NAME_EN AS FILE_NAME_EN,
		       A.FILE_ORG_NAME AS FILE_ORG_NAME,
		       A.FILE_ORG_NAME_EN AS FILE_ORG_NAME_EN,
		       A.FILE_PATH AS FILE_PATH, 
		       A.FILE_PATH_EN AS FILE_PATH_EN,
		       A.REG_DT AS  REG_DT, 
		       A.REG_EMP_NO AS REG_EMP_NO, 
		       B.EMP_NAME AS REG_EMP_NAME,
		       A.VIEW_FILE_NAME AS VIEW_FILE_NAME,
		       A.VIEW_FILE_NAME_EN AS VIEW_FILE_NAME_EN,
		       A.VIEW_FILE_ORG_NAME AS VIEW_FILE_ORG_NAME,
		       A.VIEW_FILE_ORG_NAME_EN AS VIEW_FILE_ORG_NAME_EN,
		       A.ACADEMY_PAY AS ACADEMY_PAY,
		       IF(CAST(DATE_FORMAT(NOW(), "%Y-%m-%d") AS CHAR) > A.TO_DT, 'Y', 'N') END_YN
		   from ACADEMY A INNER JOIN EMP B ON A.REG_EMP_NO = B.EMP_NO
		     where A.ACADEMY_NO = #{academy_no} 
		      and A.DISP_YN = 'Y' AND A.DEL_YN = 'N'
		order by A.FROM_DT DESC
	</select>
    <select id="get_academy_list" resultType="Map">
		select A.ACADEMY_NO AS ACADEMY_NO, 
			   A.ACADEMY_CD AS ACADEMY_CD,
			   COLUMN_JSON(A.TITLE_BLOB) TITLE_JSON ,
			   COLUMN_JSON(A.CONTENTS_BLOB) CONTENTS_JSON ,	
		       A.FROM_DT AS FROM_DT, 
		       A.TO_DT AS TO_DT, 
		       A.ACADEMY_TIME AS ACADEMY_TIME,
		       A.ACADEMY_TIME_EN AS ACADEMY_TIME_EN,
		       A.IMG_PATH AS IMG_PATH, 
		       A.IMG_PATH_EN AS IMG_PATH_EN, 
		       A.IMG_VIEW_PATH AS IMG_VIEW_PATH,
		       A.IMG_VIEW_PATH_EN AS IMG_VIEW_PATH_EN,
		       A.FILE_NAME AS FILE_NAME,
		       A.FILE_NAME_EN AS FILE_NAME_EN,
		       A.FILE_ORG_NAME AS FILE_ORG_NAME,
		       A.FILE_ORG_NAME_EN AS FILE_ORG_NAME_EN,
		       A.FILE_PATH AS FILE_PATH, 
		       A.FILE_PATH_EN AS FILE_PATH_EN,
		       A.REG_DT AS  REG_DT, 
		       A.REG_EMP_NO AS REG_EMP_NO, 
		       B.EMP_NAME AS REG_EMP_NAME,
		       A.VIEW_FILE_NAME AS VIEW_FILE_NAME,
		       A.VIEW_FILE_NAME_EN AS VIEW_FILE_NAME_EN,
		       A.VIEW_FILE_ORG_NAME AS VIEW_FILE_ORG_NAME,
		       A.VIEW_FILE_ORG_NAME_EN AS VIEW_FILE_ORG_NAME_EN,
		       A.ACADEMY_PAY AS ACADEMY_PAY,		       
		       (case when #{action_user_no} = null then 0 else (SELECT COUNT(*) FROM ACADEMY_PAY C WHERE A.ACADEMY_NO = C.ACADEMY_NO AND C.CUST_NO = #{action_user_no} ) end )  AS ACADEMY_COMPLETE,
		       IF(CAST(DATE_FORMAT(NOW(), "%Y-%m-%d") AS CHAR) > A.TO_DT, 'Y', 'N') END_YN,
		       date_format(NOW(), '%Y-%m-%d') as DB_NOW
		   from ACADEMY A INNER JOIN EMP B ON A.REG_EMP_NO = B.EMP_NO
		     where A.ACADEMY_CD = #{academy_cd} 
		      and A.DISP_YN = 'Y' AND A.DEL_YN = 'N'
		order by A.FROM_DT DESC limit	#{from}, #{rows}
	</select>
	<select id="get_academy_view" resultType="Map">
		select A.ACADEMY_NO AS ACADEMY_NO, 
			   A.ACADEMY_CD AS ACADEMY_CD,
			   COLUMN_JSON(A.TITLE_BLOB) TITLE_JSON ,
			   COLUMN_JSON(A.CONTENTS_BLOB) CONTENTS_JSON ,	
		       A.FROM_DT AS FROM_DT, 
		       A.TO_DT AS TO_DT, 
		       A.ACADEMY_TIME AS ACADEMY_TIME,
		       A.ACADEMY_TIME_EN AS ACADEMY_TIME_EN,
		       A.IMG_PATH AS IMG_PATH, 
		       A.IMG_PATH_EN AS IMG_PATH_EN,
		       A.IMG_VIEW_PATH AS IMG_VIEW_PATH,
		       A.IMG_VIEW_PATH_EN AS IMG_VIEW_PATH_EN,
		       A.FILE_NAME AS FILE_NAME,
		       A.FILE_NAME_EN AS FILE_NAME_EN,
		       A.FILE_ORG_NAME AS FILE_ORG_NAME,
		       A.FILE_ORG_NAME_EN AS FILE_ORG_NAME_EN,		       
		       A.FILE_PATH AS FILE_PATH, 
		       A.FILE_PATH_EN AS FILE_PATH_EN,
		       A.REG_DT AS  REG_DT, 
		       A.REG_EMP_NO AS REG_EMP_NO, 
		       B.EMP_NAME AS REG_EMP_NAME,
		       A.VIEW_FILE_NAME AS VIEW_FILE_NAME,
		       A.VIEW_FILE_NAME_EN AS VIEW_FILE_NAME_EN,
		       A.VIEW_FILE_ORG_NAME AS VIEW_FILE_ORG_NAME,
		       A.VIEW_FILE_ORG_NAME_EN AS VIEW_FILE_ORG_NAME_EN,
		       A.ACADEMY_PAY AS ACADEMY_PAY,		
		       A.CLOSE_YN AS CLOSE_YN,       
		       (case when #{action_user_no} = null then 0 else (SELECT COUNT(*) FROM ACADEMY_PAY C WHERE A.ACADEMY_NO = C.ACADEMY_NO AND C.CUST_NO = #{action_user_no} ) end )  AS ACADEMY_COMPLETE,
		       IF(CAST(DATE_FORMAT(NOW(), "%Y-%m-%d") AS CHAR) > A.TO_DT, 'Y', 'N') END_YN,
		       date_format(NOW(), '%Y-%m-%d') as DB_NOW
		   from ACADEMY A INNER JOIN EMP B ON A.REG_EMP_NO = B.EMP_NO
		     where A.ACADEMY_CD = #{academy_cd} 
		     and A.ACADEMY_NO = #{academy_no}
		     and A.DISP_YN = 'Y' AND A.DEL_YN = 'N'
		order by A.REG_DT DESC
	</select>

	<!-- 언론 보도 추가(2018.07.10) -->
	<sql id="press_list">
		select P.*				
		  from PRESS P
		 where P.DEL_YN = 'N'
		 <if test="search_type == 'title' and search_keyword != null">
            and (P.PRESS_TITLE like concat('%', #{search_keyword}, '%')
             or P.PRESS_TITLE_EN like concat('%', #{search_keyword}, '%'))
        </if>
        <if test="search_type == 'press' and search_keyword != null">
            and (P.PRESS_COMP like concat('%', #{search_keyword}, '%')
             or P.PRESS_COMP_EN like concat('%', #{search_keyword}, '%'))
        </if>
        <if test="search_type == 'all' and search_keyword != null">
            and (P.PRESS_TITLE like concat('%', #{search_keyword}, '%')
             or P.PRESS_TITLE_EN like concat('%', #{search_keyword}, '%')
             or P.PRESS_COMP like concat('%', #{search_keyword}, '%')
             or P.PRESS_COMP_EN like concat('%', #{search_keyword}, '%'))
        </if>
        <if test="search_lang != 'en'">
        	and P.PRESS_COMP is not null
        </if>
        <if test="search_lang == 'en'">
        	and P.PRESS_COMP_EN is not null
        </if>
        order by P.PRESS_DATE DESC, P.PRESS_NO DESC
	</sql>
	<select id="pressList" resultType="Map">
		select @rownum := @rownum - 1 as PRESS_SEQ,
		       PL.*
		  from (<include refid="press_list" />) PL,
		  	   <if test="from != null and from &gt; 0" >(select @rownum := (select count(*)+1-#{from} from (<include refid="press_list" />) PTemp)) PN</if>
		  	   <if test="from == null or from == 0" >(select @rownum := (select count(*)+1 from (<include refid="press_list" />) PTemp)) PN</if>
		 order by PL.PRESS_DATE DESC, PL.PRESS_NO DESC
		 limit		#{from}, #{rows}
	</select>
	<select id="pressListCnt" resultType="Map">
		select count(*) CNT, SUM(IF(P1.PRESS_TITLE_EN IS NOT NULL, 1, 0)) AS CNT_EN 
		from (
			<include refid="press_list" />
			) P1
	</select>
	
	<select id="get_academy_reqlist" resultType="Map">
		SELECT A.CUST_NAME , 
		A.EMAIL , 
		A.HP, 
		B.REG_DT , 
		C.ACADEMY_PAY, 
		COLUMN_JSON(C.TITLE_BLOB) TITLE_JSON
		FROM CUST A , ACADEMY_REQ B , ACADEMY C
		WHERE A.CUST_NO = B.CUST_NO AND B.ACADEMY_NO = C.ACADEMY_NO AND A.CUST_NO = #{cust_no} AND B.DEL_YN = 'N'
		order by B.REG_DT desc;
	</select>
	
	<sql id="get_newletter_sql">
		SELECT 
		NEWSLETTER_NO
		, COLUMN_GET(NEWSLETTER_TITLE_BLOB, 'ko' AS CHAR) NEWLETTER_TITLE_KO
		, COLUMN_GET(NEWSLETTER_TITLE_BLOB, 'en' AS CHAR) NEWLETTER_TITLE_EN
		,NEWSLETTER_DATE
		,FILE_NAME
		,FILE_PATH
		,FILE_ORG_NAME
		,NEWSLETTER_URL
		,NEWSLETTER_MEMO
		,DEL_YN
		,REG_DT
		,REG_EMP_NO
		,MOD_DT
		,MOD_EMP_NO
		FROM NEWSLETTER WHERE DEL_YN = 'N' 
		ORDER BY REG_DT DESC 
	</sql>
	
	<select id="get_newletter_list" resultType="Map">
	    <include refid="get_newletter_sql"/>
		LIMIT #{from}, #{rows}
	</select>
	
	<select id="get_newletter_list_count" resultType="Map">
		SELECT  count(A.NEWSLETTER_NO) as CNT
	    FROM (
	    <include refid="get_newletter_sql"/>
	    ) A
	</select>
	
	<!-- 메인슬라이드 -->
	<select id="get_home_slide_info" resultType="Map">
		SELECT BM.DISP_ORD AS DISP_ORD, 
				BM.BANN_MAIN_NO AS BANN_MAIN_NO, 
				 BM.TITLE,
				 <!-- contents -->
				 COLUMN_JSON(BM.SLIDE_TITLE_BLOB) AS SLIDE_TITLE_JSON,
				 COLUMN_JSON(BM.TEXT_TITLE_BLOB) AS TEXT_TITLE_JSON,
				 COLUMN_JSON(BM.TEXT_BLOB) AS TEXT_JSON,
				 COLUMN_JSON(BM.SUB_TEXT_TITLE_BLOB) AS SUB_TEXT_TITLE_JSON,
				 COLUMN_JSON(BM.SUB_TEXT_BLOB) AS SUB_TEXT_JSON,
				 <!-- button -->
				 COLUMN_JSON(BM.BTN1_BLOB) AS BTN1_JSON, 
				 BM.BTN1_URL, 
				 BM.BTN1_DISP_YN,
				 BM.BTN1_COLOR_YN,
				 BM.BTN1_TARGET_YN,
				 COLUMN_JSON(BM.BTN2_BLOB) AS BTN2_JSON, 
				 BM.BTN2_URL, 
				 BM.BTN2_DISP_YN,
 				 BM.BTN2_COLOR_YN,
				 BM.BTN2_TARGET_YN,
				 COLUMN_JSON(BM.BTN3_BLOB) AS BTN3_JSON, 
				 BM.BTN3_URL, 
				 BM.BTN3_DISP_YN,
 				 BM.BTN3_COLOR_YN,
				 BM.BTN3_TARGET_YN,
		 		 COLUMN_JSON(BM.BTN4_BLOB) AS BTN4_JSON, 
				 BM.BTN4_URL, 
				 BM.BTN4_DISP_YN,
 				 BM.BTN4_COLOR_YN,
				 BM.BTN4_TARGET_YN,
		 		 COLUMN_JSON(BM.BTN5_BLOB) AS BTN5_JSON, 
				 BM.BTN5_URL, 
				 BM.BTN5_DISP_YN,
 				 BM.BTN5_COLOR_YN,
				 BM.BTN5_TARGET_YN
		FROM BANN_MAIN BM
		WHERE BM.DEL_YN = 'N'
		AND BM.WWW_DISP_YN = 'Y'
		<if test="locale == 'ko'">
		AND BM.WWW_DISP_KO_YN = 'Y'
		</if>
		<if test="locale == 'en'">
		AND BM.WWW_DISP_EN_YN = 'Y'
		</if>
		ORDER BY BM.DISP_ORD ;
	</select>
	
	<select id="get_slide_img_list" resultType="Map">
		SELECT BMI.BANN_MAIN_NO, BMI.IMG_NO, BMI.FILE_PATH, BMI.FILE_NAME, BMI.FILE_NAME_ORG, BMI.DISP_ORD, BMI.SIZE 
		FROM BANN_MAIN_IMG BMI
		WHERE BMI.BANN_MAIN_NO = #{bann_main_no}
		ORDER BY BMI.DISP_ORD;
	</select>
</mapper>