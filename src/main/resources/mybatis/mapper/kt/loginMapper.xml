<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.seoulauction.renewal.mapper.kt.LoginMapper">

	<select id="selectCustByLoginId" parameterType="CommonMap"
		resultType="CommonMap">
		select *
		,IF(Date_format(Date_add(passwd_mod_dt, interval 180 day), '%y-%m-%d') <![CDATA[<=]]>
		Date_format(Now(), '%y-%m-%d'), 'Y', 'N') PASSWD_MOD_NECESSARY_YN <!-- Y시 
			180일 경과로 비밀번호변경필요 -->
		from CUST
		where LOGIN_ID = #{login_id} <!-- index -->
		and JOIN_KIND_CD = 'online' and IFNULL(DEL_YN, 'N') = 'N'
		and STAT_CD <![CDATA[<>]]>
		'leave'
	</select>

	<insert id="insertConnHist" parameterType="CommonMap">
		INSERT INTO CONN_HIST
		(CONN_DT, IP, USER_KIND_CD, USER_NO)
		VALUES (NOW(), #{ip}, #{user_kind_cd}, #{user_no})
	</insert>

	<select id="selectCustByCustNo" parameterType="CommonMap"
		resultType="CommonMap">
		select CU.*
		<if test="remember_me == 'Y'">
			, IF(Date_format(Date_add(passwd_mod_dt, interval 180 day),
			'%y-%m-%d') <![CDATA[<=]]>
			Date_format(Now(), '%y-%m-%d'), 'Y', 'N') PASSWD_MOD_NECESSARY_YN <!-- 
				Y시 180일 경과로 비밀번호변경필요 -->
		</if>
		, (select CASE WHEN max(CP.VALID_TO_DT) >= NOW() THEN "정회원" ELSE "준회원"
		END
		from CUST_PAY CP where CU.cust_no = CP.cust_no) MEMBERSHIP_NM
		, (select CASE WHEN max(CP.VALID_TO_DT) >= NOW() THEN "Y" ELSE "N" END
		from CUST_PAY CP where CU.cust_no = CP.cust_no) MEMBERSHIP_YN
		, (select CONCAT('[', GROUP_CONCAT('"', PW.PUSH_WAY_CD, '"'), ']')
		from CUST_PUSH_WAY PW where PW.CUST_NO = CU.CUST_NO) PUSH_WAY_JSON
		, (select CONCAT('[', GROUP_CONCAT('"', IA.INTE_AREA_CD, '"'), ']')
		from CUST_INTE_AREA IA where IA.CUST_NO = CU.CUST_NO) INTE_AREA_JSON
		<!-- , CS.* -->
		from CUST CU
		<!-- left outer join CUST_SOCIAL CS -->
		<!-- on CU.CUST_NO = CS.CUST_NO -->
		where 1 = 1
		and JOIN_KIND_CD = 'online'
		<if test="remember_me == 'Y'">
			and STAT_CD <![CDATA[<>]]>
			'leave'
		</if>
		<if test="remember_me == 'N'">
			and CU.STAT_CD = 'normal'
		</if>
		and CU.CUST_NO = #{cust_no}
	</select>

	<update id="updateCustPwdResetByCustNo"
		parameterType="CommonMap">
		update CUST
		set
		PASSWD_RESET_YN = 'N'
		where CUST_NO = #{cust_no}
	</update>

	<update id="updateCustPwdModDtByCustNo"
		parameterType="CommonMap">
		update CUST
		set PASSWD_MOD_DT = (select Date_add(now(),
		interval -150 day)
		from CUST
		where CUST_NO = #{cust_no})
		where CUST_NO = #{cust_no}
	</update>

	<update id="updateCustLoginFailCntByCustNo"
		parameterType="CommonMap">
		update CUST
		set LOGIN_FAIL_CNT = #{login_fail_cnt}
		where CUST_NO = #{cust_no}
	</update>


	<select id="selectCustLoginIdByCustName" resultType="CommonMap">

		select
		concat(rpad(substring(login_id, 1, 2), length(login_id)-1, '*'),
		substring(login_id, length(login_id), 1) ) LOGIN_ID ,
		cs.CUST_NO ,
		case
		when cs.SOCIAL_TYPE = 'KA' then 'KAKAO'
		when cs.SOCIAL_TYPE = 'NV' then 'NAVER'
		when cs.SOCIAL_TYPE = 'GL' then 'GOOGLE'
		when cs.SOCIAL_TYPE = 'AP' then 'APPLE'
		else ''
		END as SOCIAL_TYPE
		from
		CUST c
		left outer join cust_social cs on
		c.CUST_NO = cs.cust_no
		where
		JOIN_KIND_CD = 'online'
		and STAT_CD = 'normal'
		and CUST_NAME = #{cust_name}
		<if test="search_type == 'phone'">
			and HP = #{search_value}
		</if>
		<if test="search_type == 'email'">
			and EMAIL = #{search_value}
		</if>
	</select>


	<update id="updatePasswordByLoginId" parameterType="Map">
		<selectKey keyProperty="passwd" resultType="String"
			order="BEFORE">
			select substring(UUID(), 1,8) passwd
		</selectKey>
		update CUST set
		passwd =
		'${@com.seoulauction.renewal.auth.PasswordEncoderAESforSA@saPasswdEncoding(passwd)}'
		where login_id = #{login_id}
		and cust_name = #{cust_name}
		<if test="search_type == 'email'">
			and email = #{search_value}
		</if>
		<if test="search_type == 'phone'">
			and hp = #{search_value}
		</if>
	</update>

	<select id="selectCustomerByStatCdAndLoginId"
		resultType="CommonMap">
		select c.*,cs.CUST_NO ,
		case
			when cs.SOCIAL_TYPE = 'KA' then 'KAKAO'
			when cs.SOCIAL_TYPE = 'NV' then 'NAVER'
			when cs.SOCIAL_TYPE = 'GL' then 'GOOGLE'
			when cs.SOCIAL_TYPE = 'AP' then 'APPLE'
			else ''
		   END as SOCIAL_TYPE
		from CUST c
		left
		outer join cust_social cs on c.CUST_NO = cs.cust_no
		where JOIN_KIND_CD
		= 'online' and IFNULL(DEL_YN, 'N') = 'N'
		and STAT_CD = #{stat_cd}
		and LOGIN_ID = #{login_id}
	</select>

</mapper>