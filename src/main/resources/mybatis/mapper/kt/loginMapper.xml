<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.seoulauction.renewal.mapper.kt.LoginMapper">

	<select id="selectCustByLoginId" parameterType="CommonMap"
		resultType="CommonMap">
		select *
		,IF(Date_format(Date_add(passwd_mod_dt, interval 180 day), '%y-%m-%d') <![CDATA[<=]]>
		Date_format(Now(), '%y-%m-%d'), 'Y', 'N') PASSWD_MOD_NECESSARY_YN <!-- Y시 
			180일 경과로 비밀번호변경필요 -->
		from CUST
		where LOGIN_ID = #{login_id} <!-- index -->
		and JOIN_KIND_CD = 'online' and IFNULL(DEL_YN, 'N') = 'N'
		and STAT_CD <![CDATA[<>]]>
		'leave'
	</select>

	<insert id="insertConnHist" parameterType="CommonMap">
		INSERT INTO CONN_HIST
		(CONN_DT, IP, USER_KIND_CD, USER_NO)
		VALUES (NOW(), #{ip}, #{user_kind_cd}, #{user_no})
	</insert>

	<select id="selectCustByCustNo" parameterType="CommonMap"
		resultType="CommonMap">
		select CU.*
		<if test="remember_me == 'Y'">
			, IF(Date_format(Date_add(passwd_mod_dt, interval 180 day),
			'%y-%m-%d') <![CDATA[<=]]>
			Date_format(Now(), '%y-%m-%d'), 'Y', 'N') PASSWD_MOD_NECESSARY_YN <!-- 
				Y시 180일 경과로 비밀번호변경필요 -->
		</if>
		, (select CASE WHEN max(CP.VALID_TO_DT) >= NOW() THEN "정회원" ELSE "준회원"
		END
		from CUST_PAY CP where CU.cust_no = CP.cust_no) MEMBERSHIP_NM
		, (select CASE WHEN max(CP.VALID_TO_DT) >= NOW() THEN "Y" ELSE "N" END
		from CUST_PAY CP where CU.cust_no = CP.cust_no) MEMBERSHIP_YN
		, (select CONCAT('[', GROUP_CONCAT('"', PW.PUSH_WAY_CD, '"'), ']')
		from CUST_PUSH_WAY PW where PW.CUST_NO = CU.CUST_NO) PUSH_WAY_JSON
		, (select CONCAT('[', GROUP_CONCAT('"', IA.INTE_AREA_CD, '"'), ']')
		from CUST_INTE_AREA IA where IA.CUST_NO = CU.CUST_NO) INTE_AREA_JSON
		, IF(-11 <![CDATA[<]]> TIMESTAMPDIFF(DAY ,cp.VALID_TO_DT, NOW()) and TIMESTAMPDIFF(DAY ,cp.VALID_TO_DT, NOW()) <![CDATA[<]]> 0 , CONCAT('D',TIMESTAMPDIFF(DAY ,cp.VALID_TO_DT, NOW())) ,  date_format(Date_add(cp.VALID_TO_DT, interval -1 day), '%Y-%m-%d 23:59:59')) VALID_DATE
		<!-- , CS.* -->
		from CUST CU left outer join CUST_PAY CP on CP.CUST_NO = CU.CUST_NO  
		<!-- left outer join CUST_SOCIAL CS -->
		<!-- on CU.CUST_NO = CS.CUST_NO -->
		where 1 = 1
		and JOIN_KIND_CD = 'online'
		<if test="remember_me == 'Y'">
			and STAT_CD <![CDATA[<>]]>
			'leave'
		</if>
		<if test="remember_me == 'N'">
			and CU.STAT_CD = 'normal'
		</if>
		and CU.CUST_NO = #{cust_no}
	</select>

	<update id="updateCustPwdResetByCustNo"
		parameterType="CommonMap">
		update CUST
		set
		PASSWD_RESET_YN = 'N'
		where CUST_NO = #{cust_no}
	</update>

	<update id="updateCustPwdModDtByCustNo"
		parameterType="CommonMap">
		update CUST
		set PASSWD_MOD_DT = (select Date_add(now(),
		interval -150 day)
		from CUST
		where CUST_NO = #{cust_no})
		where CUST_NO = #{cust_no}
	</update>

	<update id="updateCustLoginFailCntByCustNo"
		parameterType="CommonMap">
		update CUST
		set LOGIN_FAIL_CNT = #{login_fail_cnt}
		where CUST_NO = #{cust_no}
	</update>


	<select id="selectCustLoginIdByCustName" resultType="CommonMap">

		select
		concat(rpad(substring(login_id, 1, 2), length(login_id)-1, '*'),
		substring(login_id, length(login_id), 1) ) LOGIN_ID ,
		cs.CUST_NO ,
		case
		when cs.SOCIAL_TYPE = 'KA' then 'KAKAO'
		when cs.SOCIAL_TYPE = 'NV' then 'NAVER'
		when cs.SOCIAL_TYPE = 'GL' then 'GOOGLE'
		when cs.SOCIAL_TYPE = 'AP' then 'APPLE'
		else ''
		END as SOCIAL_TYPE
		from
		CUST c
		left outer join cust_social cs on
		c.CUST_NO = cs.cust_no
		where
		JOIN_KIND_CD = 'online'
		and STAT_CD = 'normal'
		and CUST_NAME = #{cust_name}
		<if test="search_type == 'phone'">
			and HP = #{search_value}
		</if>
		<if test="search_type == 'email'">
			and EMAIL = #{search_value}
		</if>
	</select>


	<update id="updatePasswordByLoginId" parameterType="Map">
		<selectKey keyProperty="passwd" resultType="String"
			order="BEFORE">
			select substring(UUID(), 1,8) passwd
		</selectKey>
		update CUST set
		passwd =
		'${@com.seoulauction.renewal.auth.PasswordEncoderAESforSA@saPasswdEncoding(passwd)}'
		where login_id = #{login_id}
		and cust_name = #{cust_name}
		<if test="search_type == 'email'">
			and email = #{search_value}
		</if>
		<if test="search_type == 'phone'">
			and hp = #{search_value}
		</if>
	</update>

	<select id="selectCustomerByStatCdAndLoginId"
		resultType="CommonMap">
		select c.*,cs.CUST_NO ,
		case
			when cs.SOCIAL_TYPE = 'KA' then 'KAKAO'
			when cs.SOCIAL_TYPE = 'NV' then 'NAVER'
			when cs.SOCIAL_TYPE = 'GL' then 'GOOGLE'
			when cs.SOCIAL_TYPE = 'AP' then 'APPLE'
			else ''
		   END as SOCIAL_TYPE
		from CUST c
		left
		outer join cust_social cs on c.CUST_NO = cs.cust_no
		where JOIN_KIND_CD
		= 'online' and IFNULL(DEL_YN, 'N') = 'N'
		and STAT_CD = #{stat_cd}
		and LOGIN_ID = #{login_id}
	</select>

	<select id="selectCustSocialBySocialLoginId" resultType="CommonMap">
		select * 
		from CUST_SOCIAL 
		where SOCIAL_LOGIN_ID = #{socialLoginId}
	</select>
	
	<select id="selectCustForExist" resultType="CommonMap"> <!-- 탈퇴자는  카운트 제외. 웹회원만 체크 -->
		select CUST_NO, STAT_CD, FORE_CERT_CODE, CUST_NAME, LOGIN_ID from CUST where STAT_CD &lt;&gt; 'leave'  and JOIN_KIND_CD = 'online'
		<if test="loginId != null">
			and LOGIN_ID = #{loginId}
		</if>
		<if test="hp != null">
			and HP = #{hp}  AND CUST_KIND_CD = #{cust_kind_cd}
		</if>
		<if test="comp_no != null and comp_no != ''">
			and COMP_NO = #{comp_no}
		</if>
		<if test="fore_cert_code != null">
			and FORE_CERT_CODE = #{fore_cert_code}
		</if>
		<if test="email != null">
			and EMAIL = #{email}
		</if>
	</select>
	
	<select id="selectEmpByEmpName" resultType="CommonMap">
		SELECT *,
		       (SELECT dept_name
		        FROM   dept
		        WHERE  dept_no = emp.dept_no) as DEPT_NAME
		FROM   emp
		WHERE EMP_NAME = #{emp_name}
		AND STAT_CD = 'normal' 
	</select>
	
	<select id="selectEmpByEmpNameCnt" resultType="int">
		SELECT Count(*) row_cnt
		FROM  (SELECT emp_no
		       FROM   emp
		       WHERE  emp_name = #{emp_name}
		       AND stat_cd = 'normal')cnt 
	</select>
	
	<select id="selectCode" resultType="CommonMap" parameterType="CommonMap">
		select 		GRP_ID
				  , CD_ID, CD_NM, CD_NM_EN, CD_NM_CN
				  , CD_VAL, CD_VAL2, CD_VAL3
				  , P_GRP_ID, P_CD_ID, LEVEL
				  , CMMT, DISP_ORD
		from 		CODE
		where		USE_YN = 'Y'
				<foreach collection="grp_ids" item="item" index="index" open="and GRP_ID in (" close=")" separator=",">
					'${item}'
				</foreach>
		order by GRP_ID, DISP_ORD, CD_NM_EN
	</select>
	
	<insert id="insertCust" parameterType="CommonMap" >
	    INSERT INTO CUST (
			LOGIN_ID,
			PASSWD,
			CUST_NAME,
			HP,
			EMAIL,
			ZIPNO,
	    	ADDR,
			ADDR_DTL,
			EMP_NO,
	   		MARKETING_CHK,
	   		CUST_KIND_CD,
			JOIN_KIND_CD,
			LOCAL_KIND_CD,
			NATION_CD,
			REG_DT,
			STAT_CD,
			SEND_WAY_CD,
			PASSWD_MOD_DT,
			FORE_BID_REQ_YN,
			FORE_CERT_CODE
		) 
		VALUES ( 
			#{login_id},
			'${@com.seoulauction.renewal.auth.PasswordEncoderAESforSA@saPasswdEncoding(passwd)}',
			#{cust_name},
			#{hp},
			#{email},
			#{zipno},
			#{addr},
			#{addr_dtl},
			#{emp_no},
			<if test="maketingAgree1 == 'true'">
			'Y', <!-- MARKETING_CHK -->
			</if>
			<if test="maketingAgree1 == 'false' || maketingAgree1 == null">
			'N', <!-- MARKETING_CHK -->
			</if>
			#{cust_kind_cd},
			'online', <!-- JOIN_KIND_CD -->
			#{local_kind_cd},
			#{nation_cd},
			now(), <!-- REG_DT -->
			<if test="local_kind_cd == 'korean'">
			'normal', <!-- STAT_CD -->
			</if>
			<if test="local_kind_cd == 'foreigner'">
			'not_certify', <!-- STAT_CD -->
			</if>
			'normal', <!-- SEND_WAY_CD -->
			now(), <!-- PASSWD_MOD_DT -->
			<choose>
			    <when test="local_kind_cd == 'foreigner'">
			        #{fore_bid_req_yn}, UUID()
			    </when>
			    <otherwise>'N', null</otherwise>
			</choose>
		);
	</insert>
	
	<insert id="insertCustSocial" parameterType="CommonMap" >
	    INSERT INTO CUST_SOCIAL (
	   		CUST_NO,
	    	SOCIAL_TYPE,
			SOCIAL_EMAIL,
			SOCIAL_LOGIN_ID,
			REG_DT
		) 
		VALUES ( 
			#{cust_no},
			#{social_type},
			#{social_email},
			#{social_login_id},
			now()
		);
	</insert>
	
	<select id="selectCustForCustSocial" resultType="CommonMap">
		SELECT *
		FROM   cust
		       JOIN cust_social
		         ON cust.cust_no = cust_social.cust_no
		WHERE  1 = 1
			<if test="social_email != null">
				AND social_email = #{social_email}
			</if>
			<if test="social_login_id != null">
				AND social_login_id = #{social_login_id}
			</if>
			<if test="social_type != null">
		       	AND social_type = #{social_type}
			</if>
	</select>
	
	<insert id="insertCustPushWay" parameterType="CommonMap">
		INSERT INTO CUST_PUSH_WAY (
			CUST_NO,
			PUSH_WAY_CD,
			REG_DT
		) 
		VALUES (
			#{cust_no},
			#{push_way_cd},
			now()
		);
	</insert>
</mapper>