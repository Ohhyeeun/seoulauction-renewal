<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoulauction.renewal.mapper.kt.AuctionMapper">

	<select id="selectLotBySaleNoAndLotNo" resultType="commonMap" parameterType="commonMap">
		select L.SALE_NO, L.LOT_NO
			 , COLUMN_JSON(S.TITLE_BLOB) as SALE_TITLE_JSON
			 , COLUMN_JSON(A.ARTIST_NAME_BLOB) as ARTIST_NAME_JSON
			 , A.BORN_YEAR
			 , COLUMN_JSON(L.TITLE_BLOB) as LOT_TITLE_JSON
			 , CD.CD_NM as MATE_CD
			 , COLUMN_GET(L.MAKE_YEAR_BLOB, 'ko' as CHAR) as LOT_MAKE_YEAR
			 , CONCAT('['
			, GROUP_CONCAT('{',
						   '"UNIT_CD":"', ifnull(LS.UNIT_CD, 'cm') ,'",',
						   '"SIZE1":', ifnull(LS.SIZE1,0) ,',',
						   '"SIZE2":', ifnull(LS.SIZE2,0) ,',',
						   '"SIZE3":', ifnull(LS.SIZE3,0) ,',',
						   '"CANVAS":', ifnull(LS.CANVAS,0) ,',',
						   '"DIAMETER_YN":"', ifnull(LS.DIAMETER_YN,'N') ,'",',
						   '"PREFIX":"', ifnull(LS.PREFIX,'') ,'",',
						   '"SUFFIX":"', ifnull(LS.SUFFIX,'') ,'",',
						   '"MIX_CD":"', ifnull(LS.MIX_CD,'h') ,'",',
						   '"CANVAS_EXT_YN":"', ifnull(LS.CANVAS_EXT_YN,'N'), '"',
						   '}')
			,']') AS LOT_SIZE_JSON
			, GROUP_CONCAT(ifnull(LS.PREFIX,''),' ', CASE WHEN LS.DIAMETER_YN = 'Y' THEN 'Ã¸' ELSE '' END,
						   ifnull(truncate(LS.SIZE1, 1),''), CASE WHEN LS.SIZE1 IS NULL THEN '' ELSE ' X ' END,
						   ifnull(truncate(LS.SIZE2, 1),''), CASE WHEN LS.SIZE3 IS NULL THEN '' ELSE ' X ' END,
						   ifnull(truncate(LS.SIZE3, 1),''), case when LS.MIX_CD = 'height' then '(h)' else '' end,  'cm', case when LS.SUFFIX is null then '' else ' (' end, ifnull(LS.SUFFIX,''), case when LS.SUFFIX is null then '' else ')' end, CHAR(10))
			AS LOT_SIZE_STRING
						, LI.FILE_PATH , LI.FILE_NAME
		from LOT L
				 join SALE S on L.SALE_NO = S.SALE_NO
				 left outer join code CD on CD_ID = L.MATE_CD
				 left outer join Artist A on L.ARTIST_NO = A.ARTIST_NO
				 left outer join LOT_SIZE LS ON LS.SALE_NO = L.SALE_NO AND LS.LOT_NO = L.LOT_NO
				 left outer join LOT_IMG LI on L.SALE_NO = LI.SALE_NO and L.LOT_NO = LI.LOT_NO
			and LI.IMG_NO = (select A.IMG_NO from LOT_IMG A where A.SALE_NO = L.SALE_NO and A.LOT_NO = L.LOT_NO order by A.DISP_ORD limit 1)
		where L.sale_no = #{sale_no}
		  and L.lot_no = #{lot_no};
	</select>

	<select id="selectSalePaddNo" resultType="int" parameterType="commonMap">
		SELECT IFNULL(MAX(PADD_NO), 0)
		FROM SALE_PADD sp
		WHERE sp.CUST_NO = #{cust_no}
		  and sp.SALE_NO = #{sale_no}
	</select>

	<select id="selectMaxSalePaddNo" resultType="int" parameterType="commonMap">
		SELECT IFNULL(MAX(PADD_NO), 600)+1
		FROM SALE_PADD
		WHERE sale_no = #{sale_no}
		  and padd_no > 600
	</select>

	<insert id="insertSaleCertOff">
		INSERT INTO SALE_CERT_OFF (SALE_NO, CUST_NO, PADD_NO, REG_DT, REG_EMP_NO)
		VALUES (#{sale_no}, #{cust_no}, #{padd_no}, now(), #{cust_no})
	</insert>

	<insert id="insertSalePadd">
		INSERT INTO SALE_PADD (SALE_NO, CUST_NO, PADD_NO, REG_DT, REG_EMP_NO)
		VALUES (#{sale_no}, #{cust_no}, #{padd_no}, now(), #{cust_no})
	</insert>

	<select id="selectProgressSaleList" parameterType="CommonMap" resultType="CommonMap">
		select 	S.SALE_NO
			 , IF(S.SALE_TH_DSP_YN = 'N', '', S.SALE_TH) SALE_TH, COLUMN_JSON(S.TITLE_BLOB) TITLE_JSON
			 , S.FROM_DT
			 , S.TO_DT
			 , COLUMN_JSON(S.PLACE_BLOB) PLACE_JSON
			 , S.SALE_KIND_CD
			 , SI.FILE_PATH as SALE_IMG_PATH
			 , SI.FILE_NAME as SALE_IMG_NAME
			 , LI.FILE_PATH as LOT_IMG_PATH
			 , LI.FILE_NAME as LOT_IMG_NAME
			 , (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO) END_DT
			 , S.LIVE_BID_YN
			 , S.LIVE_BID_DT
			 , S.SALE_OUTSIDE_YN
			 , if(S.SALE_KIND_CD in ('plan', 'main', 'hongkong') and S.TO_DT &lt; current_timestamp - interval 5 year, 'Y', 'N') as IS_OLD_SALE
			 , (select min(sp.FROM_DT) from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) PREV_FROM_DT
			 , (select max(sp.TO_DT) from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) PREV_TO_DT
			 , now() as DB_NOW
		from SALE S
			left outer join SALE_IMG SI on SI.SALE_NO = S.SALE_NO
				and SI.IMG_NO = (select A.IMG_NO from SALE_IMG A where A.SALE_NO = S.SALE_NO order by A.IMG_NO limit 1)
			left outer join LOT_IMG LI on LI.SALE_NO = S.SALE_NO
				and LI.LOT_NO = (select A.LOT_NO from LOT A, LOT_IMG B where A.SALE_NO = S.SALE_NO and A.SALE_NO = B.SALE_NO and A.LOT_NO = B.LOT_NO order by A.LOT_NO, B.DISP_ORD limit 1)
				and LI.IMG_NO = (select B.IMG_NO from LOT A, LOT_IMG B where A.SALE_NO = S.SALE_NO and A.SALE_NO = B.SALE_NO and A.LOT_NO = B.LOT_NO order by A.LOT_NO, B.DISP_ORD limit 1)
		where DEL_YN ='N' and WWW_DISP_YN = 'Y'
		  and S.STAT_CD = 'open'
		  and now() &lt; case when S.SALE_KIND_CD in ('online','online_zb') then (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO)
			when S.SALE_KIND_CD IN ('exhibit', 'exhibit_sa') then S.TO_DT
			else (<![CDATA[select (case when LC.CLOSE_YN = 'Y' THEN LC.TO_DT ELSE DATE_ADD(NOW(), INTERVAL 1 HOUR)  END) from LOT LC where LC.SALE_NO = S.SALE_NO AND LC.LOT_NO = (SELECT MAX(LC1.LOT_NO) FROM LOT LC1 WHERE LC1.SALE_NO = S.SALE_NO AND LC1.STAT_CD <> 'reentry')]]>) end
		ORDER BY S.SALE_NO
	</select>

	<select id="selectScheduledSaleList" parameterType="CommonMap" resultType="CommonMap">
		select 	S.SALE_NO
			, IF(S.SALE_TH_DSP_YN = 'N', '', S.SALE_TH) SALE_TH, COLUMN_JSON(S.TITLE_BLOB) TITLE_JSON
			, S.FROM_DT
			, S.TO_DT
			, COLUMN_JSON(S.PLACE_BLOB) PLACE_JSON
			, S.SALE_KIND_CD
			, SI.FILE_PATH as SALE_IMG_PATH
			, SI.FILE_NAME as SALE_IMG_NAME
			, LI.FILE_PATH as LOT_IMG_PATH
			, LI.FILE_NAME as LOT_IMG_NAME
			, (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO) END_DT
			, S.LIVE_BID_YN
			, S.LIVE_BID_DT
			, S.SALE_OUTSIDE_YN
			, if(S.SALE_KIND_CD in ('plan', 'main', 'hongkong') and S.TO_DT &lt; current_timestamp - interval 5 year, 'Y', 'N') as IS_OLD_SALE
			, (select min(sp.FROM_DT) from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) PREV_FROM_DT
			, (select max(sp.TO_DT) from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) PREV_TO_DT
			, now() as DB_NOW
		from SALE S
			left outer join SALE_IMG SI on SI.SALE_NO = S.SALE_NO
				and SI.IMG_NO = (select A.IMG_NO from SALE_IMG A where A.SALE_NO = S.SALE_NO order by A.IMG_NO limit 1)
			left outer join LOT_IMG LI on LI.SALE_NO = S.SALE_NO
				and LI.LOT_NO = (select A.LOT_NO from LOT A, LOT_IMG B where A.SALE_NO = S.SALE_NO and A.SALE_NO = B.SALE_NO and A.LOT_NO = B.LOT_NO order by A.LOT_NO, B.DISP_ORD limit 1)
				and LI.IMG_NO = (select B.IMG_NO from LOT A, LOT_IMG B where A.SALE_NO = S.SALE_NO and A.SALE_NO = B.SALE_NO and A.LOT_NO = B.LOT_NO order by A.LOT_NO, B.DISP_ORD limit 1)
		where DEL_YN ='N' and WWW_DISP_YN = 'Y'
			and S.STAT_CD = 'upcoming'
			and now() &lt; case when S.SALE_KIND_CD in ('online','online_zb') then (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO)
				when S.SALE_KIND_CD IN ('exhibit', 'exhibit_sa') then S.TO_DT
				else (<![CDATA[select (case when LC.CLOSE_YN = 'Y' THEN LC.TO_DT ELSE DATE_ADD(NOW(), INTERVAL 1 HOUR)  END) from LOT LC where LC.SALE_NO = S.SALE_NO AND LC.LOT_NO = (SELECT MAX(LC1.LOT_NO) FROM LOT LC1 WHERE LC1.SALE_NO = S.SALE_NO AND LC1.STAT_CD <> 'reentry')]]>) end
		ORDER BY S.SALE_NO
	</select>

	<select id="selectResultSaleListPaging" parameterType="CommonMap" resultType="CommonMap">
		<include refid="selectResultSaleList"/>
		limit #{from}, #{rows}
	</select>
	<select id="selectResultSaleListCount" parameterType="CommonMap" resultType="int">
		select  count(*) as CNT
		from (
			<include refid="selectResultSaleList"/>
		) A
	</select>
	<sql id="selectResultSaleList">
		select 	S.SALE_NO
			, IF(S.SALE_TH_DSP_YN = 'N', '', S.SALE_TH) SALE_TH, COLUMN_JSON(S.TITLE_BLOB) TITLE_JSON
			, S.FROM_DT
			, S.TO_DT
			, COLUMN_JSON(S.PLACE_BLOB) PLACE_JSON
			, S.SALE_KIND_CD
			, SI.FILE_PATH as SALE_IMG_PATH
			, SI.FILE_NAME as SALE_IMG_NAME
			, LI.FILE_PATH as LOT_IMG_PATH
			, LI.FILE_NAME as LOT_IMG_NAME
			, (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO) END_DT
			, S.LIVE_BID_YN
			, S.LIVE_BID_DT
			, S.SALE_OUTSIDE_YN
			, if(S.SALE_KIND_CD in ('plan', 'main', 'hongkong') and S.TO_DT &lt; current_timestamp - interval 5 year, 'Y', 'N') as IS_OLD_SALE
			, (select ifnull(concat('[',
				GROUP_CONCAT('{'
				, '"PLACE_JSON":', ifnull(CAST(COLUMN_JSON(SP.PLACE_BLOB) as char), ''), ', '
				, '"ADDR_JSON":', ifnull(CAST(COLUMN_JSON(SP.ADDR_BLOB) as char), ''), ', '
				, '"FROM_DT":"', SP.FROM_DT, '", '
				, '"TO_DT":"', SP.TO_DT, '", '
				, '"FROM_TIME":"', SP.FROM_TIME, '", '
				, '"TO_TIME":"', SP.TO_TIME, '", '
				, '"MAP_URL":"', ifnull(SP.MAP_URL, ''), '"'
				, '}')
				,']'), '{}') from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) as PREVIEW_JSON
			, now() as DB_NOW
		from SALE S
			LEFT OUTER JOIN SALE_IMG SI on SI.SALE_NO = S.SALE_NO
				and SI.IMG_NO = (select A.IMG_NO from SALE_IMG A where A.SALE_NO = S.SALE_NO order by A.IMG_NO limit 1)
			LEFT OUTER JOIN LOT_IMG LI on LI.SALE_NO = S.SALE_NO
				and LI.LOT_NO = (select A.LOT_NO from LOT A, LOT_IMG B where A.SALE_NO = S.SALE_NO and A.SALE_NO = B.SALE_NO and A.LOT_NO = B.LOT_NO order by A.LOT_NO, B.DISP_ORD limit 1)
				and LI.IMG_NO = (select B.IMG_NO from LOT A, LOT_IMG B where A.SALE_NO = S.SALE_NO and A.SALE_NO = B.SALE_NO and A.LOT_NO = B.LOT_NO order by A.LOT_NO, B.DISP_ORD limit 1)
		where DEL_YN ='N' and WWW_DISP_YN = 'Y'
		  and S.STAT_CD = 'open'
		  and now() &gt; case when S.SALE_KIND_CD in ('online','online_zb') then (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO)
			when S.SALE_KIND_CD IN ('exhibit', 'exhibit_sa') then S.TO_DT
			else (<![CDATA[select LC.TO_DT from LOT LC where LC.SALE_NO = S.SALE_NO AND LC.LOT_NO = (SELECT MAX(LC1.LOT_NO) FROM LOT LC1 WHERE LC1.SALE_NO = S.SALE_NO AND LC1.STAT_CD <> 'reentry')]]>)  end
			<choose>
				<when test='sale_kind_cd == "live"'>
					and S.SALE_KIND_CD in ('main', 'plan')
				</when>
				<when test='sale_kind_cd == "online"'>
					and S.SALE_KIND_CD in ('online', 'online_zb')
				</when>
				<when test='sale_kind_cd == "etc"'>
					and S.SALE_KIND_CD in ('exhibit', 'exhibit_sa')
				</when>
				<when test='sale_kind_cd != null and sale_kind_cd != ""'>
					and S.SALE_KIND_CD = #{sale_kind_cd}
				</when>
			</choose>
			<if test="find_word != null">
				and (COLUMN_GET(S.TITLE_BLOB, 'ko' AS CHAR) like concat('%', #{find_word}, '%')
					or COLUMN_GET(S.TITLE_BLOB, 'en' AS CHAR) like concat('%', #{find_word}, '%')
					or COLUMN_GET(S.TITLE_BLOB, 'zh' AS CHAR) like concat('%', #{find_word}, '%'))
			</if>
		ORDER BY S.FROM_DT desc
	</sql>


	<select id="selectSaleInfo" parameterType="CommonMap" resultType="CommonMap">
		select S.SALE_NO
		    , COLUMN_JSON(S.TITLE_BLOB) TITLE_JSON
		    , S.FROM_DT
		    , S.TO_DT
			, S.LIVE_BID_YN
			, S.LIVE_BID_DT
			, S.AUTO_BID_REQ_CLOSE_DT
			, now() as DB_NOW
			, (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO) END_DT
			, (<![CDATA[select LC.CLOSE_YN from LOT LC where LC.SALE_NO = S.SALE_NO AND LC.LOT_NO = (SELECT MAX(LC1.LOT_NO) FROM LOT LC1 WHERE LC1.SALE_NO = S.SALE_NO AND LC1.STAT_CD <> 'reentry')]]>) AS CLOSE_YN
			, BW.WRITE_NO
		    , min(SP.FROM_DT) PREV_FROM_DT
		    , max(SP.TO_DT) PREV_TO_DT
			, concat('[',
		  		GROUP_CONCAT('{'
				, '"PLACE_JSON":', ifnull(CAST(COLUMN_JSON(SP.PLACE_BLOB) as char), ''), ', '
				, '"ADDR_JSON":', ifnull(CAST(COLUMN_JSON(SP.ADDR_BLOB) as char), ''), ', '
				, '"FROM_DT":"', SP.FROM_DT, '", '
				, '"TO_DT":"', SP.TO_DT, '", '
				, '"FROM_TIME":"', SP.FROM_TIME, '", '
				, '"TO_TIME":"', SP.TO_TIME, '", '
				, '"MAP_URL":"', ifnull(SP.MAP_URL, ''), '"'
				, '}')
				,']') as PREVIEW_JSON
		from SALE S
			LEFT OUTER JOIN BBS_WRITE BW ON BW.SALE_NO = S.SALE_NO AND BBS_ID = 'notice'
			LEFT OUTER JOIN SALE_PREV SP ON S.SALE_NO = SP.SALE_NO
		where S.SALE_NO = #{sale_no}
		  and S.DEL_YN ='N'
		  and S.WWW_DISP_YN = 'Y'
	</select>
</mapper>