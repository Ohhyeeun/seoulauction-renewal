<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoulauction.renewal.mapper.kt.SaleLiveMapper">
    <!--경매 단일 -->
    <select id="selectLiveSale" parameterType="CommonMap" resultType="CommonMap">
        SELECT
            A.SALE_NO,
            A.SALE_TH,
            COLUMN_JSON(A.TITLE_BLOB)           SALE_TITLE_JSON,
            A.SALE_KIND_CD,
            A.CURR_CD
        FROM
            SALE A
        WHERE
            A.SALE_NO = #{sale_no}
            AND A.WWW_DISP_YN = 'Y'
            AND A.CLOSE_YN = 'N'
            AND A.SALE_KIND_CD IN ('main','plan','hongkong')
    </select>
    <!--랏 리스트 -->
    <select id="selectLiveSaleLots" parameterType="CommonMap" resultType="CommonMap">
        SELECT
              L.LOT_NO
             ,COLUMN_JSON(L.TITLE_BLOB) LOT_TITLE_JSON -- 타이틀
             ,COLUMN_JSON(L.EXPE_PRICE_FROM_BLOB) EXPE_PRICE_FROM_JSON -- 낮은 추정가
             ,COLUMN_JSON(L.EXPE_PRICE_TO_BLOB) EXPE_PRICE_TO_JSON -- 높은 추정가
             ,COLUMN_JSON(D.ARTIST_NAME_BLOB)     ARTIST_NAME_JSON
             ,COLUMN_JSON(L.MAKE_YEAR_BLOB)       MAKE_YEAR_JSON
             ,IMG_DISP_YN
             ,IF ((select COUNT(*) from CUST_INTE_LOT CIL where CIL.SALE_NO =
              L.SALE_NO and CIL.LOT_NO = L.LOT_NO and CUST_NO = #{cust_no} ) <![CDATA[ > ]]> 0 , 'Y' , 'N') FAVORITE_YN
             ,LI.FILE_PATH LOT_IMG_PATH
             ,LI.FILE_NAME LOT_IMG_NAME
             ,LIVE_ING_YN
             ,STAT_CD
             ,LIVE_CLOSE_YN
             ,CLOSE_YN
             ,UNDERBIDDER_YN
             ,UNDERBIDDER_REMARK
             ,( SELECT C.CD_NM FROM CODE C WHERE C.CD_ID = L.MATE_CD AND GRP_ID ='material') MATE_CD_KO
             ,( SELECT C.CD_NM_EN FROM CODE C WHERE C.CD_ID = L.MATE_CD AND GRP_ID ='material') MATE_CD_EN
             ,H.CD_ID CATE_CD_ID
             ,H.CD_NM CATE_CD_NM
             ,H.CD_NM_EN CATE_CD_NM_EN
             ,concat('[',
             GROUP_CONCAT('{',
                '"UNIT_CD":"', ifnull(E.UNIT_CD, 'cm') ,'",',
                '"SIZE1":', ifnull(E.SIZE1,0) ,',',
                '"SIZE2":', ifnull(E.SIZE2,0) ,',',
                '"SIZE3":', ifnull(E.SIZE3,0) ,',',
                '"CANVAS":', ifnull(E.CANVAS,0) ,',',
                '"DIAMETER_YN":"', ifnull(E.DIAMETER_YN,'N') ,'",',
                '"PREFIX":"', ifnull(E.PREFIX,'') ,'",',
                '"SUFFIX":"', ifnull(E.SUFFIX,'') ,'",',
                '"MIX_CD":"', ifnull(E.MIX_CD,'h') ,'",',
                '"CANVAS_EXT_YN":"', ifnull(E.CANVAS_EXT_YN,'N'), '"',
            '}')
              ,']') AS LOT_SIZE_ARRAY
              ,ifnull(E.UNIT_CD, 'cm')             UNIT_CD
              ,ifnull(E.SIZE1, '0')                SIZE1
              ,ifnull(E.SIZE2, '0')                SIZE2
              ,ifnull(E.SIZE3, '0')                SIZE3
              ,ifnull(E.CANVAS, '0')               CANVAS
              ,ifnull(E.DIAMETER_YN, 'N')          DIAMETER_YN
              ,ifnull(E.PREFIX, '')                PREFIX
              ,ifnull(E.SUFFIX, '')                SUFFIX
              ,ifnull(E.MIX_CD, 'h')               MIX_CD
              ,ifnull(E.CANVAS_EXT_YN, 'N')        CANVAS_EXT_YN
              ,(SELECT MAX(BID_PRICE) FROM BID WHERE SALE_NO = L.SALE_NO AND LOT_NO = L.LOT_NO) MAX_BID_PRICE
        FROM
            LOT L
            left outer join LOT_IMG LI on L.SALE_NO = LI.SALE_NO and L.LOT_NO = LI.LOT_NO
            LEFT OUTER JOIN LOT_SIZE E ON L.SALE_NO = E.SALE_NO AND L.LOT_NO = E.LOT_NO
            and LI.IMG_NO = (select A.IMG_NO from LOT_IMG A where A.SALE_NO = L.SALE_NO and A.LOT_NO = L.LOT_NO order by A.DISP_ORD limit 1)
            LEFT OUTER JOIN ARTIST D ON L.ARTIST_NO = D.ARTIST_NO
            LEFT OUTER JOIN CODE H ON H.GRP_ID = 'artwork_category' AND H.CD_ID = (SELECT  IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID = (SELECT IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID = L.CATE_CD))
        WHERE
              L.SALE_NO = #{sale_no}
         --  and L.STAT_CD = 'entry'
          and L.WWW_DISP_YN = 'Y'
         <if test="category !=null">
          and H.CD_ID = #{category}
         </if>
        <if test="tag !=null">
            and L.LOT_TAG = #{tag}
        </if>
        group by
            L.LOT_NO
    </select>
    <!--랏 상세 -->
    <select id="selectLiveSaleLotByOne" parameterType="CommonMap" resultType="CommonMap">
        SELECT
              L.LOT_NO
             ,COLUMN_JSON(L.TITLE_BLOB) LOT_TITLE_JSON -- 타이틀
             ,COLUMN_JSON(L.EXPE_PRICE_FROM_BLOB) EXPE_PRICE_FROM_JSON -- 낮은 추정가
             ,COLUMN_JSON(L.EXPE_PRICE_TO_BLOB) EXPE_PRICE_TO_JSON -- 높은 추정가
             ,COLUMN_JSON(D.ARTIST_NAME_BLOB)     ARTIST_NAME_JSON
             ,COLUMN_JSON(L.TITLE_BLOB)           LOT_TITLE_JSON
             ,COLUMN_JSON(L.MAKE_YEAR_BLOB)       MAKE_YEAR_JSON
             ,D.BORN_YEAR
             ,D.DIE_YEAR
             ,LI.FILE_PATH LOT_IMG_PATH
             ,LI.FILE_NAME LOT_IMG_NAME
             ,L.LIVE_ING_YN
             ,L.LIVE_CLOSE_YN
             ,L.START_PRICE
             , (CASE WHEN (SELECT CUST_NO FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_DT DESC, BD_OFF.BID_PRICE desc, BD_OFF.BID_NO desc limit 1)
            = '${cust_no}' THEN 'Y' ELSE 'N' END) AS IS_WIN
             ,(SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_NO DESC, BD_OFF.BID_DT DESC LIMIT 1) AS LAST_PRICE
             ,IF(S.CURR_CD = 'HKD', f_grow_price_offline_hongkong(((SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_DT DESC LIMIT 1))),
              f_grow_price_offline(((SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_DT DESC LIMIT 1)))
            ) AS GROW_PRICE
        FROM
            LOT L
                left outer join LOT_IMG LI on L.SALE_NO = LI.SALE_NO and L.LOT_NO = LI.LOT_NO
                and LI.IMG_NO = (select A.IMG_NO from LOT_IMG A where A.SALE_NO = L.SALE_NO and A.LOT_NO = L.LOT_NO order by A.DISP_ORD limit 1)
            LEFT OUTER JOIN ARTIST D ON L.ARTIST_NO = D.ARTIST_NO
            LEFT OUTER JOIN SALE S ON S.SALE_NO = L.SALE_NO
            LEFT OUTER JOIN LOT_SIZE E ON L.SALE_NO = E.SALE_NO AND L.LOT_NO = E.LOT_NO
            LEFT OUTER JOIN CODE H ON H.GRP_ID = 'artwork_category' AND H.CD_ID = (SELECT  IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID = (SELECT IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID = L.CATE_CD))
        WHERE
              L.SALE_NO = #{sale_no}
          --  and L.STAT_CD = 'entry'
          and L.WWW_DISP_YN = 'Y'
        <if test="reentry == null" >
          and L.LIVE_ING_YN = 'Y'
        </if>
        <if test="reentry != null and reentry" >
            and L.STAT_CD != 'reentry'
        </if>
        group by
            L.LOT_NO
        ORDER BY
            L.LOT_NO
        limit
            1
    </select>
    <!--랏 태그와 랏 카테고리를 합침 .-->
    <select id="selectLiveTypes" parameterType="CommonMap" resultType="CommonMap">
        SELECT *
        FROM
            (
                 (
                     SELECT 'tag'   as TYPE,
                            LOT_TAG as CD_ID,
                            LOT_TAG as CD_NM,
                            LOT_TAG as CD_NM_EN
                     FROM LOT
                     WHERE SALE_NO = #{sale_no}
                       AND LOT_TAG IS NOT NULL
                     GROUP BY LOT_TAG
                     ORDER BY LOT_TAG
                 )
                 UNION ALL
                 (
                     SELECT 'category' as TYPE
                          , CD_ID
                          , CD_NM
                          , CD_NM_EN
                     FROM CODE
                     WHERE GRP_ID = 'artwork_category'
                       AND CD_ID IN (SELECT IFNULL(P_CD_ID, CD_ID)
                                     FROM CODE
                                     WHERE GRP_ID = 'artwork_category'
                                       AND CD_ID IN (SELECT IFNULL(P_CD_ID, CD_ID)
                                                     FROM CODE
                                                     WHERE GRP_ID = 'artwork_category'
                                                       AND CD_ID IN (SELECT CATE_CD FROM LOT WHERE SALE_NO = #{sale_no})))
                     ORDER BY DISP_ORD
                 )
             ) AS R
        ORDER BY R.TYPE
    </select>
    <!--카테고리 내역-->
    <select id="selectLiveCategories" parameterType="CommonMap" resultType="CommonMap">
        SELECT
             CD_ID
            ,CD_NM
            ,CD_NM_EN
        FROM
            CODE
        WHERE
            GRP_ID = 'artwork_category'
            AND CD_ID IN (SELECT  IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE
            GRP_ID = 'artwork_category' AND CD_ID IN (SELECT IFNULL(P_CD_ID, CD_ID)
            FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID IN (SELECT CATE_CD FROM LOT WHERE SALE_NO = #{sale_no})))
        ORDER BY
            DISP_ORD
    </select>
    <!--랏 태그 내역-->
    <select id="selectLiveLotTags" parameterType="CommonMap" resultType="CommonMap">
        SELECT
            LOT_TAG
        FROM
            LOT
        WHERE
            SALE_NO = #{sale_no} AND LOT_TAG IS NOT NULL
        GROUP BY
            LOT_TAG
    </select>

    <!--내 라이브 응찰 내역 -->
    <select id="selectLiveMyBidding" parameterType="CommonMap" resultType="CommonMap">
        SELECT
              	L.LOT_NO
             ,	BO.LAST_BID_PRICE								AS LAST_BID_PRICE
             ,	BOH.HAMMER_BID_PRICE							AS HAMMER_BID_PRICE
             ,	IF(BOH.HAMMER_BID_PRICE IS NULL, 'ING', 'DONE')	AS LIVE_STAT
             , 	IF(BOH.CUST_NO = BO.CUST_NO AND BO.LAST_BID_PRICE = BOH.HAMMER_BID_PRICE, 'hammer', 'bidding') AS HAMMER_STAT
        FROM	(SELECT SALE_NO, LOT_NO, CUST_NO, MAX(BID_PRICE) AS LAST_BID_PRICE FROM BID_OFFLINE WHERE SALE_NO = #{sale_no} AND CUST_NO = #{cust_no} GROUP BY SALE_NO, LOT_NO) BO
                    LEFT OUTER JOIN SALE_PADD SP ON SP.SALE_NO = BO.SALE_NO AND SP.CUST_NO = BO.CUST_NO
                    LEFT OUTER JOIN (SELECT SALE_NO, LOT_NO, CUST_NO, BID_PRICE AS HAMMER_BID_PRICE FROM BID WHERE SALE_NO = #{sale_no} ) BOH ON BOH.SALE_NO = BO.SALE_NO AND BOH.LOT_NO = BO.LOT_NO
                    INNER JOIN (SELECT * FROM LOT WHERE SALE_NO = #{sale_no} ) L ON L.SALE_NO = BO.SALE_NO AND L.LOT_NO = BO.LOT_NO
                    LEFT OUTER JOIN ARTIST A ON L.ARTIST_NO = A.ARTIST_NO
        WHERE	1 = 1
    </select>
    <!--현장 응찰 내역 -->
    <select id="selectLiveSiteBidding" parameterType="CommonMap" resultType="CommonMap">
        SELECT
            BD_OFF.*, PADD.PADD_NO as ONLINE_BID_ID
        FROM
            BID_OFFLINE BD_OFF
            LEFT OUTER JOIN CUST C ON BD_OFF.CUST_NO = C.CUST_NO
            LEFT OUTER JOIN SALE_PADD PADD ON BD_OFF.SALE_NO = PADD.SALE_NO AND BD_OFF.CUST_NO = PADD.CUST_NO AND PADD.PADD_NO > 600
        WHERE
              1 = 1
          AND BD_OFF.SALE_NO = #{sale_no}
          AND BD_OFF.LOT_NO  = #{lot_no}
        ORDER BY
             BD_OFF.BID_NO DESC
    </select>
    <!--응찰 하기-->
    <insert id="insertLiveBidding" parameterType="CommonMap">
            INSERT INTO BID_OFFLINE (
            SALE_NO,
            LOT_NO,
            CUST_NO,
            PADD_NO,
            BID_PRICE,
            BID_KIND_CD,
            BID_NOTICE,
            BID_NOTICE_EN,
            BID_DT,
            REG_DT
        )
        SELECT BMAX.SALE_NO, BMAX.LOT_NO, BMAX.CUST_NO, #{padd_no}, BMAX.BID_PRICE, BMAX.BID_KIND_CD, BMAX.BID_NOTICE, BMAX.BID_NOTICE_EN, NOW(6), NOW(6)
            FROM (SELECT 	#{sale_no} as SALE_NO,
            #{lot_no} as LOT_NO,
            CASE WHEN #{bid_kind_cd} = 'online' THEN ${cust_no} END as CUST_NO,
            #{bid_price} as BID_PRICE,
            #{bid_kind_cd} as BID_KIND_CD,
            #{bid_notice} as BID_NOTICE,
            #{bid_notice_en} as BID_NOTICE_EN
            FROM  (SELECT L.SALE_NO, L.LOT_NO, BO.CUST_NO, BO.BID_PRICE
            FROM (SELECT * FROM LOT WHERE SALE_NO = #{sale_no} AND LOT_NO = #{lot_no}) L
            LEFT OUTER JOIN (SELECT * FROM BID_OFFLINE WHERE SALE_NO = #{sale_no} AND LOT_NO = #{lot_no} AND BID_PRICE IS NOT NULL ORDER BY BID_NO DESC LIMIT 1 ) BO
            ON L.SALE_NO = BO.SALE_NO AND L.LOT_NO = BO.LOT_NO) BOFF

            WHERE  BOFF.SALE_NO = #{sale_no}
            AND  BOFF.LOT_NO = #{lot_no}
            <if test='bid_kind_cd == "online"'>
                AND  IFNULL(BOFF.CUST_NO, 0) != ${cust_no}
                AND  IFNULL(#{bid_price}, 0) > IFNULL(BOFF.BID_PRICE, 0)
            </if>
            <if test='bid_notice == null and bid_kind_cd != "price_change"'>
                AND  IFNULL(#{bid_price}, 0) >= IFNULL(BOFF.BID_PRICE, 0)
            </if>
        ) BMAX
    </insert>
    <select id="selectBidOfflineForLastPrice" parameterType="CommonMap" resultType="CommonMap">
        SELECT BID_PRICE FROM BID_OFFLINE WHERE SALE_NO = #{sale_no} AND LOT_NO = #{lot_no} AND BID_PRICE IS NOT NULL ORDER BY BID_NO DESC LIMIT 1
    </select>


    <!--환률정보 -->
    <select id="selectSaleExchRate" parameterType="CommonMap" resultType="CommonMap">
        SELECT
            EX.*
        FROM
             SALE_EXCH_RATE EX
        WHERE
              EX.SALE_NO = #{sale_no}
    </select>

    <!-- 랏 동기화 작업 1 - 특정 경매의 모든 랏 LIVE_ING_YN - N , LIVE_CLOSE_YN - Y 로 세팅-->
    <select id="updateLotSync1" parameterType="CommonMap" resultType="CommonMap">
        UPDATE
            LOT
        SET
            LIVE_ING_YN = 'N',
            LIVE_CLOSE_YN = 'Y'
        WHERE
            SALE_NO = #{sale_no}
    </select>

    <!-- 랏 동기화 작업 2 - 특정 랏 LIVE-ING_YN - Y , LIVE_CLOSE_YN - Y 로 세팅-->
    <select id="updateLotSync2" parameterType="CommonMap" resultType="CommonMap">
        UPDATE
            LOT
         SET
             LIVE_ING_YN = 'Y',
             LIVE_CLOSE_YN = 'Y'
         WHERE
            SALE_NO = #{sale_no}
            AND LOT_NO = #{lot_no}
    </select>

    <!--랏 마감 - 특정 랏의 LIVE_CLOSE_YN 정보를 토글 형식으로 바꾼다. ( 호출 될때마다 Y , N 이 바낌 ) -->
    <select id="updateLotCloseToggle" parameterType="CommonMap" resultType="CommonMap">
        UPDATE
            LOT
        SET
            LIVE_CLOSE_YN = IF(LIVE_CLOSE_YN = 'Y', 'N', 'Y')
        WHERE
            SALE_NO = #{sale_no}
        AND LOT_NO = #{lot_no}
    </select>

    <!--운영자용 오프라인 비드 삭제-->
    <delete id="deleteBidOfflineByBidId" parameterType="CommonMap">
        DELETE FROM
            BID_OFFLINE
        WHERE
            BID_NO = #{bid_no}
    </delete>

    <!-- 라이브 랏 마감 여부 -->
    <select id="selectLotClose" parameterType="CommonMap" resultType="String">
        select
            LIVE_CLOSE_YN
        FROM
            LOT
        WHERE
            SALE_NO = #{sale_no} AND LOT_NO = #{lot_no}
    </select>

    <!-- 경매 List 및 상세 페이지 내 LOT별 검색 Combo Box -->
    <select id="selectSaleLotImages" resultType="CommonMap" parameterType="commonMap">
        SELECT B.SALE_NO               SALE_NO,
               B.LOT_NO                LOT_NO,
               B.IMG_DISP_YN           IMG_DISP_YN,
               C.FILE_PATH             FILE_PATH,
               C.FILE_NAME             FILE_NAME
        FROM LOT B INNER JOIN LOT_IMG C ON B.SALE_NO = C.SALE_NO AND B.LOT_NO = C.LOT_NO AND C.DISP_ORD = 1
        WHERE B.SALE_NO =  #{sale_no}
          AND B.CLOSE_YN = 'N'
          AND B.STAT_CD = 'entry'
        GROUP BY B.SALE_NO, B.LOT_NO, C.FILE_PATH, C.FILE_NAME
        ORDER BY B.LOT_NO ASC
    </select>
    <!-- 경매 Live List -->
    <sql id="saleLiveList">
        SELECT
            L.LOT_NO,
            COLUMN_JSON(D.ARTIST_NAME_BLOB)     ARTIST_NAME_JSON,
            COLUMN_JSON(L.TITLE_BLOB)           LOT_TITLE_JSON,
            COLUMN_JSON(L.EXPE_PRICE_FROM_BLOB) EXPE_PRICE_FROM_JSON,
            COLUMN_JSON(L.EXPE_PRICE_TO_BLOB)   EXPE_PRICE_TO_JSON,
            (SELECT MAX(BID_PRICE) FROM BID WHERE SALE_NO = L.SALE_NO AND LOT_NO = L.LOT_NO) MAX_BID_PRICE,
            COLUMN_JSON(L.MAKE_YEAR_BLOB)       MAKE_YEAR_JSON,
            ( SELECT C.CD_NM FROM CODE C WHERE C.CD_ID = L.MATE_CD AND GRP_ID ='material') MATE_CD_KO,
            ( SELECT C.CD_NM_EN FROM CODE C WHERE C.CD_ID = L.MATE_CD AND GRP_ID ='material') MATE_CD_EN,
            LI.FILE_PATH                        LOT_IMG_PATH,
            LI.FILE_NAME                        LOT_IMG_NAME,
            concat('[',
            GROUP_CONCAT('{',
            '"UNIT_CD":"', ifnull(E.UNIT_CD, 'cm') ,'",',
            '"SIZE1":', ifnull(E.SIZE1,0) ,',',
            '"SIZE2":', ifnull(E.SIZE2,0) ,',',
            '"SIZE3":', ifnull(E.SIZE3,0) ,',',
            '"CANVAS":', ifnull(E.CANVAS,0) ,',',
            '"DIAMETER_YN":"', ifnull(E.DIAMETER_YN,'N') ,'",',
            '"PREFIX":"', ifnull(E.PREFIX,'') ,'",',
            '"SUFFIX":"', ifnull(E.SUFFIX,'') ,'",',
            '"MIX_CD":"', ifnull(E.MIX_CD,'h') ,'",',
            '"CANVAS_EXT_YN":"', ifnull(E.CANVAS_EXT_YN,'N'), '"',
            '}')
            ,']') AS LOT_SIZE_ARRAY,
            IF ((select COUNT(*) from CUST_INTE_LOT CIL where CIL.SALE_NO =
            L.SALE_NO and CIL.LOT_NO = L.LOT_NO and CUST_NO = #{cust_no} ) <![CDATA[ > ]]> 0 , 'Y' , 'N') FAVORITE_YN,
            L.CLOSE_YN,
            L.EXPE_PRICE_INQ_YN,
            L.STAT_CD -- 출품취소여부
        FROM
            LOT L
            LEFT OUTER JOIN LOT_SIZE E ON L.SALE_NO = E.SALE_NO AND L.LOT_NO = E.LOT_NO
            LEFT OUTER JOIN LOT_IMG LI ON L.SALE_NO = LI.SALE_NO AND L.LOT_NO = LI.LOT_NO
            AND LI.IMG_NO = (select A.IMG_NO from LOT_IMG A where A.SALE_NO = L.SALE_NO and A.LOT_NO = L.LOT_NO order by A.DISP_ORD limit 1)
            LEFT OUTER JOIN ARTIST D ON L.ARTIST_NO = D.ARTIST_NO
            LEFT OUTER JOIN CODE H ON H.GRP_ID = 'artwork_category' AND H.CD_ID = (SELECT  IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID = (SELECT IFNULL(P_CD_ID, CD_ID) FROM CODE WHERE GRP_ID = 'artwork_category' AND CD_ID = L.CATE_CD))
            WHERE
            L.SALE_NO = #{sale_no}
            AND L.WWW_DISP_YN = 'Y'
        <if test="lot_no != null">
            AND L.LOT_NO IN (${lot_no})
        </if>
        <if test="device != null">
            AND L.CLOSE_YN = 'N'
            AND L.STAT_CD = 'entry'
        </if>
        <if test="category != null">
            AND H.CD_ID = #{category}
        </if>
        <if test="tag != null">
            AND L.LOT_TAG = #{tag}
        </if>
        <if test="search != null and lang != null">
            AND (COLUMN_GET(D.ARTIST_NAME_BLOB, #{lang} AS CHAR) like concat('%', #{search}, '%')
            OR COLUMN_GET(L.TITLE_BLOB, #{lang} AS CHAR) like concat('%', #{search}, '%'))
        </if>
        GROUP BY
            L.LOT_NO
        ORDER BY
        <choose>
            <when test="sort_by == 'LOTAS'">L.LOT_NO</when>
            <when test="sort_by == 'ESTDE'">COLUMN_GET(L.EXPE_PRICE_FROM_BLOB, 'KRW' as double) desc, L.LOT_NO</when>
            <when test="sort_by == 'ESTAS'">COLUMN_GET(L.EXPE_PRICE_FROM_BLOB, 'KRW' as double), L.LOT_NO</when>
            <otherwise>L.LOT_NO</otherwise>
        </choose>
    </sql>
    <!-- 경매 List 조회 -->
    <select id="selectSaleList" parameterType="CommonMap" resultType="CommonMap">
        <include refid="saleLiveList"></include>
        <if test="device == null">
            LIMIT
            #{offset} , #{size}
        </if>
    </select>
    <!-- 경매 List Count 조회 -->
    <select id="selectSaleListCount" parameterType="CommonMap" resultType="int">
        SELECT
            COUNT(*) as CNT
        FROM
        (
            <include refid="saleLiveList"></include>
        ) A
    </select>
    <!-- 경매 LOT정보 조회 -->
    <select id="selectLotInfo" resultType="CommonMap" parameterType="commonMap">
        SELECT
            L.LOT_NO
            , L.STAT_CD
            , L.CATE_CD
            , L.START_PRICE
            , L.GROW_PRICE
            , COLUMN_JSON(L.TITLE_BLOB)             TITLE_JSON
            , COLUMN_JSON(L.MAKE_YEAR_BLOB)         MAKE_YEAR_JSON
            , COLUMN_JSON(AT.ARTIST_NAME_BLOB)      ARTIST_NAME_JSON
            , L.ARTIST_NO
            , AT.BORN_YEAR
            , AT.DIE_YEAR
            , ( SELECT C.CD_NM FROM CODE C WHERE C.CD_ID = L.MATE_CD AND GRP_ID ='material') MATE_CD_KO
            , ( SELECT C.CD_NM_EN FROM CODE C WHERE C.CD_ID = L.MATE_CD AND GRP_ID ='material') MATE_CD_EN
            , L.CLOSE_YN                            LOT_CLOSE_YN
            , (SELECT LC.CLOSE_YN FROM LOT LC inner join SALE S ON LC.SALE_NO = S.SALE_NO WHERE LC.LOT_NO =
            (<![CDATA[SELECT MAX(LC1.LOT_NO) FROM LOT LC1 inner join SALE S1 ON LC1.SALE_NO = S1.SALE_NO WHERE LC1.STAT_CD <> 'reentry')]]>) AS SALE_CLOSE_YN
            , L.EXPE_PRICE_INQ_YN
            , COLUMN_JSON(L.EXPE_PRICE_FROM_BLOB)   EXPE_PRICE_FROM_JSON
            , COLUMN_JSON(L.EXPE_PRICE_TO_BLOB)     EXPE_PRICE_TO_JSON
            , (SELECT MAX(BID_PRICE) FROM BID WHERE SALE_NO = L.SALE_NO AND LOT_NO = L.LOT_NO) MAX_BID_PRICE
            , CONCAT('['
            , GROUP_CONCAT('{',
            '"UNIT_CD":"', ifnull(LS.UNIT_CD, 'cm') ,'",',
            '"SIZE1":', ifnull(LS.SIZE1,0) ,',',
            '"SIZE2":', ifnull(LS.SIZE2,0) ,',',
            '"SIZE3":', ifnull(LS.SIZE3,0) ,',',
            '"CANVAS":', ifnull(LS.CANVAS,0) ,',',
            '"DIAMETER_YN":"', ifnull(LS.DIAMETER_YN,'N') ,'",',
            '"PREFIX":"', ifnull(LS.PREFIX,'') ,'",',
            '"SUFFIX":"', ifnull(LS.SUFFIX,'') ,'",',
            '"MIX_CD":"', ifnull(LS.MIX_CD,'h') ,'",',
            '"CANVAS_EXT_YN":"', ifnull(LS.CANVAS_EXT_YN,'N') , '"',
            '}')
            ,']') AS LOT_SIZE_ARRAY
            , LI.FILE_PATH                          LOT_IMG_PATH
            , LI.FILE_NAME                          LOT_IMG_NAME
            , L.IMG_DISP_YN
            , if(CD_ART.CD_ID in('traditional_painting', 'local_painting', 'foreign_painting'), 'Y', 'N') AS VIEW_SCALE_YN
            , IF ((select COUNT(*) from CUST_INTE_LOT CIL where CIL.SALE_NO =
            L.SALE_NO and CIL.LOT_NO = L.LOT_NO and CUST_NO = #{cust_no} ) > 0 , 'Y' , 'N') FAVORITE_YN
            , COLUMN_JSON(L.CMMT_BLOB)              CMMT_JSON -- 작품설명
            , L.EDITION -- 에디션
            , COLUMN_JSON(L.SIGN_INFO_BLOB)         SIGN_INFO_JSON -- 서명 값
            , COLUMN_JSON(L.COND_RPT_BLOB)          COND_RPT_JSON -- CONDITION
            , COLUMN_JSON(L.LITE_INFO_BLOB)         LITE_INFO_JSON -- LITERATURE
            , COLUMN_JSON(L.EXHI_INFO_BLOB)         EXHI_INFO_JSON -- EXHIBITED
            , COLUMN_JSON(L.PROV_INFO_BLOB)         PROV_INFO_JSON -- PROVENANCE
        FROM LOT L
        left outer join (<include refid="com.seoulauction.renewal.mapper.kt.CommonMapper.saleLastBidInfos"/>) BD
            on BD.SALE_NO = L.SALE_NO and BD.LOT_NO = L.LOT_NO
        left outer join ARTIST AT on AT.ARTIST_NO = L.ARTIST_NO
        left outer join (SELECT * FROM CODE WHERE GRP_ID = 'artwork_category') CD_ART on CD_ART.CD_ID = L.CATE_CD
        left outer join LOT_IMG LI on LI.SALE_NO = L.SALE_NO and LI.LOT_NO = L.LOT_NO
        and LI.IMG_NO = (select A.IMG_NO from LOT_IMG A where A.SALE_NO = L.SALE_NO and A.LOT_NO = L.LOT_NO order by
        A.DISP_ORD limit 1)
        left outer join LOT_SIZE LS ON LS.SALE_NO = L.SALE_NO AND LS.LOT_NO = L.LOT_NO
        where L.SALE_NO = #{sale_no}
        and L.LOT_NO = #{lot_no}
        group by L.SALE_NO, L.LOT_NO
    </select>
    <!--관리자용 Sale 가져오기.-->
    <select id="selectAdminSaleInfo" resultType="CommonMap" parameterType="commonMap">
        SELECT
                S.SALE_NO
             ,	S.SALE_KIND_CD
             ,	IF(S.SALE_TH_DSP_YN = 'N', '', S.SALE_TH) SALE_TH
             ,	IF(S.SALE_TH_DSP_YN = 'N', '', f_ordinal_number(S.SALE_TH)) SALE_TH_DSP
             ,	S.TO_DT
             ,	S.CURR_CD
             ,	COLUMN_JSON(S.TITLE_BLOB) TITLE_JSON
             , (SELECT MAX(LOT_NO) FROM LOT WHERE SALE_NO = S.SALE_NO) MAX_LOT_NO
             , (SELECT LOT_NO FROM LOT WHERE SALE_NO = S.SALE_NO AND LIVE_ING_YN = 'Y') ING_LOT_NO
        FROM
            SALE S
        WHERE
            S.SALE_NO = #{sale_no}
            AND
            S.SALE_KIND_CD IN ('main','plan','honkong')
        ORDER BY
            S.TO_DT ASC
        LIMIT
            1
    </select>
    <!--관리자용 오프라인 비드 정보 가져오기.-->
    <select id="selectAdminOffBid" resultType="CommonMap" parameterType="commonMap">
        SELECT BD_OFF.*, PADD.PADD_NO as ONLINE_BID_ID
        FROM BID_OFFLINE BD_OFF
                 LEFT OUTER JOIN CUST C ON BD_OFF.CUST_NO = C.CUST_NO
                 LEFT OUTER JOIN SALE_PADD PADD ON BD_OFF.SALE_NO = PADD.SALE_NO AND BD_OFF.CUST_NO = PADD.CUST_NO AND PADD.PADD_NO > 600
        WHERE 1 = 1
          AND BD_OFF.SALE_NO = #{sale_no}
          AND BD_OFF.LOT_NO  = #{lot_no}
        ORDER BY BD_OFF.BID_NO DESC
    </select>
    <select id="selectAdminLotInfo" resultType="CommonMap" parameterType="commonMap">
        SELECT L.SALE_NO
             , L.LOT_NO
             , COLUMN_JSON(A.ARTIST_NAME_BLOB) ARTIST_NAME_JSON
             , COLUMN_JSON(L.TITLE_BLOB) TITLE_JSON
             , COLUMN_JSON(L.EXPE_PRICE_FROM_BLOB) EXPE_PRICE_FROM_JSON
             , COLUMN_JSON(L.EXPE_PRICE_TO_BLOB) EXPE_PRICE_TO_JSON
             , CD.CD_NM_EN as MATE_NM_EN
             , L.EXPE_PRICE_INQ_YN
             , L.START_PRICE
             , LI.FILE_PATH LOT_IMG_PATH
             , LI.FILE_NAME LOT_IMG_NAME
             , (SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_NO DESC, BD_OFF.BID_DT DESC LIMIT 1) AS LAST_PRICE
 			 , IF(S.CURR_CD = 'HKD', f_grow_price_offline_hongkong(((SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_DT DESC LIMIT 1))),
 			 	f_grow_price_offline(((SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_DT DESC LIMIT 1)))
 			 	) AS GROW_PRICE
 			 , L.GROW_PRICE as START_GROW_PRICE
 			 , (CASE WHEN (SELECT CUST_NO FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_DT DESC, BD_OFF.BID_PRICE desc, BD_OFF.BID_NO desc limit 1)
 			 		 = '${action_user_no}' THEN 'Y' ELSE 'N' END) AS IS_WIN
 			 , L.LIVE_CLOSE_YN
        FROM
            (SELECT * FROM LOT WHERE sale_no = #{sale_no} and STAT_CD = 'entry'
            AND lot_no = IFNULL((SELECT lot_no FROM LOT WHERE sale_no = #{sale_no} and STAT_CD = 'entry' AND LIVE_ING_YN = 'Y'), 1)) L
            LEFT OUTER JOIN ARTIST A ON L.ARTIST_NO = A.ARTIST_NO
            LEFT OUTER JOIN CODE CD	on CD.grp_id = 'material' and CD.CD_ID = L.MATE_CD
            LEFT OUTER JOIN LOT_IMG LI ON L.SALE_NO = LI.SALE_NO AND L.LOT_NO = LI.LOT_NO
            AND LI.IMG_NO = (SELECT T.IMG_NO FROM LOT_IMG T WHERE T.SALE_NO = L.SALE_NO AND T.LOT_NO = L.LOT_NO ORDER BY T.DISP_ORD LIMIT 1)
            INNER JOIN SALE S ON S.SALE_NO = L.SALE_NO
        WHERE
            L.SALE_NO = #{sale_no}
        ORDER BY L.LOT_NO ASC
        LIMIT
            1
    </select>

</mapper>