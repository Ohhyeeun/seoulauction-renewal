<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoulauction.renewal.mapper.kt.MypageMapper">	
	
	<!-- 아카데미 list -->
	<select id="selectAcademyList" resultType="Map">
		SELECT A.CUST_NAME , 
		A.EMAIL , 
		A.HP, 
		B.REG_DT , 
		C.ACADEMY_PAY, 
		C.ACADEMY_PAY1,
		C.ACADEMY_PAY2,
		C.ACADEMY_PAY3,
		COLUMN_JSON(C.TITLE_BLOB) TITLE_JSON,
		COLUMN_GET(C.TITLE_BLOB, 'ko' AS CHAR) TITLE_KO,
		COLUMN_GET(C.TITLE_BLOB, 'en' AS CHAR) TITLE_EN,
		C.ACADEMY_NO
		FROM CUST A , ACADEMY_REQ B , ACADEMY C
		WHERE A.CUST_NO = B.CUST_NO AND B.ACADEMY_NO = C.ACADEMY_NO AND A.CUST_NO = #{cust_no} AND B.DEL_YN = 'N'
		order by B.REG_DT desc
		limit #{offset}, #{size}
	</select>
	
	<select id="selectAcademyCnt" resultType="int">
		SELECT 
		COUNT(*)	     ROW_CNT
		FROM CUST A , ACADEMY_REQ B , ACADEMY C
		WHERE A.CUST_NO = B.CUST_NO AND B.ACADEMY_NO = C.ACADEMY_NO AND A.CUST_NO = #{cust_no} AND B.DEL_YN = 'N'
	</select>
	
	<!-- 아카데미 결제정보 -->
	<select id="selectAcademyPayInfo" resultType="CommonMap">
	select 		
		ACADEMY_PAY , 
		ACADEMY_PAY1 ,
		ACADEMY_PAY2 ,
		ACADEMY_PAY3 
	from
		ACADEMY 
		where ACADEMY_NO = #{academy_no}
	</select>
	
	<!-- 결제관리 -->
	<sql id="sql_pay_list">
	 select S.SALE_NO, IF(S.SALE_TH_DSP_YN = 'N', '', CONCAT(S.SALE_TH, f_ordinal_number(S.SALE_TH))) SALE_TH, COLUMN_JSON(S.TITLE_BLOB) TITLE_JSON
	   	, COLUMN_GET(S.TITLE_BLOB, 'ko' AS CHAR) SALE_TITLE_KR
	   	, S.FROM_DT, S.TO_DT, S.CURR_CD
		, L.LOT_NO, L.ARTIST_NO, L.REAL_CUST_NO, L.PAYMENT_FEE_SET_CD
		, COLUMN_JSON(L.TITLE_BLOB) LOT_TITLE_JSON
		, COLUMN_GET(L.TITLE_BLOB, 'ko' AS CHAR) LOT_TITLE_KR
		, (select CONCAT(LI.FILE_PATH, "/", LI.FILE_NAME) from LOT_IMG LI 
			where LI.SALE_NO = L.SALE_NO and LI.LOT_NO = L.LOT_NO limit 1) LOT_IMG
		, CAST(COLUMN_JSON(A.ARTIST_NAME_BLOB) AS CHAR) ARTIST_NAME_JSON
		, IFNULL(COLUMN_GET(A.ARTIST_NAME_BLOB, 'ko' AS CHAR), '') ARTIST_NAME_KR
		, CONCAT('[', GROUP_CONCAT('{"PRICE_FROM":', ifnull(LF.PRICE_FROM, 0), ', "PRICE_TO":', ifnull(LF.PRICE_TO, 0) , ', "RATE":', ifnull(LF.RATE, 0.0), '}'), ']') LOT_FEE_JSON
		, B.BID_PRICE, B.BID_DT, B.CUST_NO BID_CUST_NO, B.RANK
		, P.CUST_NO PAY_CUST_NO
		, P.PAY_METHOD_NM, PAY_CNT
		, P.PAY_PRICE
		, case when P.CUST_NO is null then 0 else 1 end PAID_CNT
		, if((select count(*) from CUST_BASE_FEE where CUST_NO = '1' and FEE_KIND_CD = 'payment') = 0, 'N', 'Y') CUST_FEE_YN
		from LOT L
		join SALE S on L.SALE_NO = S.SALE_NO
		left outer join ARTIST A on L.ARTIST_NO = A.ARTIST_NO
		left outer join LOT_FEE LF on LF.SALE_NO = L.SALE_NO and LF.LOT_NO = L.LOT_NO and LF.FEE_KIND_CD = 'payment'
		left outer join (
			select RB.* from (
				select
					B.*
					, case when @val = concat(B.SALE_NO, '_', B.LOT_NO)
						then (@rownum:=@rownum+1) else @rownum:=1 end RANK
				, @val:=concat(B.SALE_NO, '_', B.LOT_NO)
				from BID B,(select @val:='', @rownum := 0) R
				where B.BID_KIND_CD in ('online_once', 'online_auto')
				order by B.SALE_NO desc, B.LOT_NO, B.BID_PRICE desc, B.BID_DT
			) RB where RB.RANK = 1
		) B on B.SALE_NO = L.SALE_NO and B.LOT_NO = L.LOT_NO
		left outer join (
			select SP.CUST_NO, sum(SP.PAY_PRICE) PAY_PRICE, LP.SALE_NO, LP.LOT_NO, C.CD_NM PAY_METHOD_NM, count(*) PAY_CNT
			from PAY SP
			join LOT_PAY LP on LP.PAY_NO = SP.PAY_NO and LP.FEE_KIND_CD = 'payment'
			join CODE C on SP.PAY_METHOD_CD = C.CD_ID and C.GRP_ID = 'pay_method'
			group by LP.SALE_NO, LP.LOT_NO
		) P on P.SALE_NO = L.SALE_NO and P.LOT_NO = L.LOT_NO
		where L.TO_DT &lt;= NOW()
		and (B.CUST_NO = '1' and REAL_CUST_NO is null) or REAL_CUST_NO = '1'
		and (P.CUST_NO = null or (B.CUST_NO = '1' and REAL_CUST_NO is null) or REAL_CUST_NO = '1')
		<if test='searchMonth != null '>
		and DATE_FORMAT(L.TO_DT,'%Y-%m') = #{searchMonth}
		</if>
		<if test='searchKeyword != null '>
		and COLUMN_GET(L.TITLE_BLOB, 'ko' AS CHAR) like CONCAT('%',#{searchKeyword},'%')
		</if>
		<if test='searchStartDt != null and searchEndDt != null'>
		and S.TO_DT Between DATE_FORMAT(#{searchStartDt},'%Y-%m-%d') AND DATE_FORMAT(#{searchEndDt},'%Y-%m-%d')
		</if>
		group by L.SALE_NO, L.LOT_NO
	</sql>
	
	<select id="selectPayCountByCustNo" resultType="CommonMap">
	    select count(*) ROW_CNT, SUM(PAID_CNT) PAID_CNT from (
			<include refid="sql_pay_list" />
		) RESULT
	</select>
		
	<select id="selectPayListByCustNo" resultType="Map">
		<include refid="sql_pay_list" />
		order by S.SALE_NO DESC
		limit #{offset}, #{size}
	</select>
	
	<select id="selectCustomerByCustNo" resultType="Map">
		select CU.*
			, (select CASE WHEN max(CP.VALID_TO_DT) >= NOW() THEN "정회원" ELSE "준회원" END 
			   from CUST_PAY CP where CU.cust_no = CP.cust_no) MEMBERSHIP_NM
			, (select CASE WHEN max(CP.VALID_TO_DT) >= NOW() THEN "Y" ELSE "N" END 
			    from CUST_PAY CP where CU.cust_no = CP.cust_no) MEMBERSHIP_YN
			, (select CONCAT('[', GROUP_CONCAT('"', PW.PUSH_WAY_CD, '"'), ']')  
				from CUST_PUSH_WAY PW where PW.CUST_NO = CU.CUST_NO) PUSH_WAY_JSON
			, (select CONCAT('[', GROUP_CONCAT('"', IA.INTE_AREA_CD, '"'), ']') 
				from CUST_INTE_AREA IA where IA.CUST_NO = CU.CUST_NO) INTE_AREA_JSON
		   from CUST CU
		   where JOIN_KIND_CD = 'online'
		   and CU.STAT_CD = 'normal' 
		   and CU.CUST_NO = #{action_user_no}
	</select>
	
	<select id="selectSaleListByCustNo" resultType="Map">
	select concat(year(S.TO_DT),'-',if (month(S.TO_DT) &lt; 10, concat('0',month(S.TO_DT)), month(S.TO_DT))) as saleMonth
		from LOT L
		join SALE S on L.SALE_NO = S.SALE_NO
		left outer join LOT_FEE LF on LF.SALE_NO = L.SALE_NO and LF.LOT_NO = L.LOT_NO and LF.FEE_KIND_CD = 'payment'
		left outer join (
			select RB.* from (
				select
					B.*
					, case when @val = concat(B.SALE_NO, '_', B.LOT_NO)
						then (@rownum:=@rownum+1) else @rownum:=1 end RANK
				, @val:=concat(B.SALE_NO, '_', B.LOT_NO)
				from BID B,(select @val:='', @rownum := 0) R
				where B.BID_KIND_CD in ('online_once', 'online_auto')
				order by B.SALE_NO desc, B.LOT_NO, B.BID_PRICE desc, B.BID_DT
			) RB where RB.RANK = 1
		) B on B.SALE_NO = L.SALE_NO and B.LOT_NO = L.LOT_NO
		left outer join (
			select SP.CUST_NO, sum(SP.PAY_PRICE) PAY_PRICE, LP.SALE_NO, LP.LOT_NO, C.CD_NM PAY_METHOD_NM, count(*) PAY_CNT
			from PAY SP
			join LOT_PAY LP on LP.PAY_NO = SP.PAY_NO and LP.FEE_KIND_CD = 'payment'
			join CODE C on SP.PAY_METHOD_CD = C.CD_ID and C.GRP_ID = 'pay_method'
			group by LP.SALE_NO, LP.LOT_NO
		) P on P.SALE_NO = L.SALE_NO and P.LOT_NO = L.LOT_NO
		where L.TO_DT &lt;= NOW()
		and (B.CUST_NO = '1' and REAL_CUST_NO is null) or REAL_CUST_NO = '1'
		and (P.CUST_NO = null or (B.CUST_NO = '1' and REAL_CUST_NO is null) or REAL_CUST_NO = '1')
	group by L.SALE_NO
	order by S.TO_DT DESC;
	</select>
	
</mapper>