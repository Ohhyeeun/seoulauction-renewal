<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seoulauction.renewal.mapper.kt.KTMainMapper">
	<select id="selectUpcomings" parameterType="CommonMap" resultType="CommonMap">
		<![CDATA[
		select SALE_NO
			 , SALE_KIND_CD
			 , DATEDIFF(date(FROM_DT), now()) as D_DAY
			 , IF(SALE_TH_DSP_YN = 'N', '', SALE_TH) SALE_TH
			 , COLUMN_JSON(TITLE_BLOB) AS TITLE_BLOB
			 , WWW_DISP_YN
			 , FROM_DT
			 , TO_DT
			 , STAT_CD
			 , (select min(SP.FROM_DT) from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) PREV_FROM_DT
			 , (select max(SP.TO_DT) from SALE_PREV SP where SP.SALE_NO = S.SALE_NO) PREV_TO_DT
			 , now() as DB_NOW
		from SALE S
		where DEL_YN = 'N'
		  	and WWW_DISP_YN = 'Y'
		  	and S.SALE_OUTSIDE_YN = 'N'
			and S.STAT_CD = 'upcoming'
		 	and S.SALE_KIND_CD NOT IN ('exhibit', 'exhibit_sa')
			and now() < case when S.SALE_KIND_CD in ('online','online_zb') then (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO)
				when S.SALE_KIND_CD IN ('exhibit', 'exhibit_sa') then S.TO_DT
				else (select (case when LC.CLOSE_YN = 'Y' THEN LC.TO_DT ELSE DATE_ADD(NOW(), INTERVAL 1 HOUR)  END) from LOT LC where LC.SALE_NO = S.SALE_NO AND LC.LOT_NO = (SELECT MAX(LC1.LOT_NO) FROM LOT LC1 WHERE LC1.SALE_NO = S.SALE_NO AND LC1.STAT_CD <> 'reentry')) end
		ORDER BY S.FROM_DT
		]]>
	</select>

	<select id="selectIngAuctions" parameterType="CommonMap" resultType="CommonMap">
	<![CDATA[
		select * from (
			  select S.SALE_NO
				   , IF(S.SALE_KIND_CD in ('online','online_zb'), 'ONLINE', 'LIVE') AS SALE_KIND
				   , IF(S.SALE_TH_DSP_YN = 'N', '', S.SALE_TH) SALE_TH
				   , COLUMN_JSON(S.TITLE_BLOB) AS TITLE_BLOB
				   , COLUMN_JSON(S.TINY_TITLE_BLOB) AS TINY_TITLE_BLOB
			       , S.FROM_DT
				   , S.TO_DT
			  from SALE S
			  where S.STAT_CD ='open'
				and S.WWW_DISP_YN = 'Y'
				and S.SALE_OUTSIDE_YN = 'N'
			    and S.FROM_DT <= now()
				and S.SALE_KIND_CD NOT IN ('exhibit', 'exhibit_sa')
				and now() <
				    case
						when S.SALE_KIND_CD in ('online','online_zb')
				    	then (select MAX(L.TO_DT) from LOT L where L.SALE_NO = S.SALE_NO GROUP BY L.SALE_NO)
						when S.SALE_KIND_CD in ('main','hongkong','plan')
						then (
						       select ( case when LC.CLOSE_YN = 'Y'
										THEN LC.TO_DT
						    			ELSE DATE_ADD(NOW(), INTERVAL 1 HOUR)
									    END
						               )
						                 from LOT LC
									     where LC.SALE_NO = S.SALE_NO
									     AND LC.LOT_NO = (SELECT MAX(LC1.LOT_NO) FROM LOT LC1 WHERE LC1.SALE_NO = S.SALE_NO AND LC1.STAT_CD <> 'reentry')
						     )
					    end
-- 				and (
-- 				  case
-- 					  when S.SALE_KIND_CD in ('online','online_zb')
-- 						  then (select MAX(L.TO_DT) > now() from LOT L where L.STAT_CD = 'entry' and L.SALE_NO = S.SALE_NO)
-- 					  when S.SALE_KIND_CD in ('main','hongkong','plan') -- 마감되지 않은 경매가 하나 이상 있으면 false
-- 						  then (select IF(count(*) > 1, true, false) from LOT L where L.CLOSE_YN = 'N' and L.STAT_CD = 'entry' and L.SALE_NO = S.SALE_NO and S.SALE_OUTSIDE_YN = 'N')
-- 				  end
-- 				  )
			  order by S.TO_DT
			  limit 5
		  ) SR
		order by field(SR.SALE_KIND, 'LIVE', 'ONLINE'), SR.TO_DT
	]]>
	</select>
	<select id="selectIngMenuCount" parameterType="CommonMap" resultType="CommonMap" >
	<![CDATA[
		-- 메뉴 count (진행경매/예정경매/전시/아카데미)
		select
			COUNT(
					case
						when S.SALE_KIND_CD in ('online','online_zb')
							then (select MAX(L.TO_DT) >= now() from LOT L where L.STAT_CD = 'entry' and L.SALE_NO = S.SALE_NO)
						when S.SALE_KIND_CD in ('main','hongkong','plan')
							then (select IF(count(*) > 1, true, false) from LOT L where L.CLOSE_YN = 'N' and L.STAT_CD = 'entry' and L.SALE_NO = S.SALE_NO)
						end
				) as AuctionCount
			 , COUNT(case when S.STAT_CD = 'upcoming' then 1 end) as UpcomingCount
			 , COUNT(case when S.SALE_KIND_CD IN ('exhibit', 'exhibit_sa') then 1 end) as ExhibitionCount
			 ,(SELECT COUNT(*) FROM ACADEMY WHERE DEL_YN != 'Y' and TO_DT >= now()) as AcademyCount
		from SALE S
		where S.DEL_YN = 'N'
		  and S.WWW_DISP_YN = 'Y'
		  and S.SALE_OUTSIDE_YN = 'N'
		  and S.TO_DT >= now();
	]]>
	</select>

	<select id="selectSaleSqaureImage" parameterType="CommonMap" resultType="CommonMap">
		select * from SALE_IMG
		where SALE_NO = #{sale_no}
		and DISP_ORD = 2
		limit 1;
	</select>

	<select id="selectHaveToPayWork" parameterType="CommonMap" resultType="CommonMap">
		<![CDATA[
		select
			B.SALE_NO, L.LOT_NO
		from BID B
		inner join LOT L on B.SALE_NO = L.SALE_NO and B.LOT_NO = L.LOT_NO
		where B.BID_KIND_CD in ('online_auto', 'online_once')
			and B.CUST_NO = #{action_user_no}
			and L.TO_DT <= now()
			and (select count(*) from LOT_PAY LP where LP.SALE_NO = B.SALE_NO and LP.LOT_NO = B.LOT_NO) < 1
		group by B.SALE_NO, B.LOT_NO;
		]]>
	</select>
	<select id="selectLotsBySaleNo" parameterType="CommonMap" resultType="CommonMap">
		-- 랏
		select
			-- *
		    L.IMG_DISP_YN IMG_DISP_YN
		   ,LI.FILE_PATH FILE_PATH
		   ,LI.FILE_NAME FILE_NAME
		   ,COLUMN_JSON(L.TITLE_BLOB) EXPE_PRICE_TITLE -- 타이틀
		   ,COLUMN_JSON(L.EXPE_PRICE_FROM_BLOB) EXPE_PRICE_FROM_JSON -- 낮은 추정가
		   ,COLUMN_JSON(L.EXPE_PRICE_TO_BLOB) EXPE_PRICE_TO_JSON -- 높은 추정가
		   ,L.START_PRICE -- 시작가
		   ,(SELECT MAX(BID_PRICE) FROM BID B WHERE B.SALE_NO = L.SALE_NO AND B.LOT_NO = L.LOT_NO) MAX_BID_PRICE -- 현재가 ( 낙찰여부가 있을경우 낙찰가 ! )
		   ,(SELECT COUNT(*) FROM BID B WHERE B.SALE_NO = L.SALE_NO AND B.LOT_NO = L.LOT_NO) BID_COUNT -- 비딩 카운트
		   ,(SELECT BD_OFF.BID_PRICE FROM BID_OFFLINE BD_OFF WHERE BD_OFF.BID_NOTICE is NULL
		    AND BD_OFF.SALE_NO = L.SALE_NO AND BD_OFF.LOT_NO = L.LOT_NO ORDER BY BD_OFF.BID_NO DESC, BD_OFF.BID_DT DESC LIMIT 1) AS LAST_PRICE -- 오프라인 용 현재가
		   ,IF(( SELECT COUNT(*) FROM SUCCESS_BID SB WHERE SB.SALE_NO = L.SALE_NO AND SB.LOT_NO = L.LOT_NO > 0 ) , 'Y' , 'N') AS SB_YN -- 낙찰여부
		   ,IMG_DISP_YN
			<if test="cust_no != null">
		   ,IFNULL(IL.DEL_YN,'Y') FAVORITE_YN /*N 이면 좋아요가 있음. Y면 좋아요가 아님.*/
			</if>
		from
			LOT L left outer join LOT_IMG LI on L.SALE_NO = LI.SALE_NO and L.LOT_NO = LI.LOT_NO
			<if test="cust_no != null">
			left outer join CUST_INTE_LOT IL on IL.CUST_NO = #{cust_no} and L.SALE_NO = IL.SALE_NO and L.LOT_NO = IL.LOT_NO
			</if>
			and LI.IMG_NO = (select A.IMG_NO from LOT_IMG A where A.SALE_NO = L.SALE_NO and A.LOT_NO = L.LOT_NO order by A.DISP_ORD limit 1)
		where
			  L.SALE_NO = #{sale_no}
		  and L.STAT_CD = 'entry'
		  and L.WWW_DISP_YN = 'Y'
-- 		  and L.IMG_DISP_YN = 'Y'
		group by
			L.LOT_NO
		limit
			30
	</select>



</mapper>

